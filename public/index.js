/* Generated by the Nim Compiler v1.2.6 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI12118016 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12119016 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11066039 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6221 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6243 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6245 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11251084 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9901230 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11251073 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11251070 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11251067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI163 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI179 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI11251041 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11251045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11251043 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI6235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6253 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6251 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1186907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9770125 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10187211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI861084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI861085 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9735078 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9735074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9731139 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI9735030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9735018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9735039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9735037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9731015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI9735031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9735022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI623454 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623450 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623446 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623438 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623434 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623430 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623426 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623422 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623418 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623414 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623402 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623394 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623390 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623386 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623382 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623378 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI623205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI623287 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI623229 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI623574 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI623572 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI623570 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI623233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI623231 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10187207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10187209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI623289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6249 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6219 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI143 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI160043 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6286 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI112 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI6281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI6217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI114 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI12096015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NNI12096015 = {kind: 1, offset: "tweetText", len: 0, typ: NTI114, name: "tweetText", sons: null};
NTI12096015.node = NNI12096015;
NTI6281.base = NTI6217;
NTI6286.base = NTI6217;
var NNI6217 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI6281, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI114, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI112, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI112, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI6286, name: "up", sons: null}]};
NTI6217.node = NNI6217;
var NNI6008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6008.node = NNI6008;
NTI6217.base = NTI6008;
var NNI160043 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI114, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}]};
NTI160043.node = NNI160043;
var NNI6237 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6237.node = NNI6237;
var NNI6233 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6233.node = NNI6233;
var NNI6219 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6219.node = NNI6219;
NTI6219.base = NTI6217;
NTI6233.base = NTI6219;
NTI6237.base = NTI6233;
var NNI6241 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6241.node = NNI6241;
NTI6241.base = NTI6219;
var NNI6249 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6249.node = NNI6249;
NTI6249.base = NTI6219;
var NNI623289 = {kind: 2, len: 100, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI114, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI114, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI114, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI114, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI114, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI114, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI114, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI114, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI114, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI114, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI114, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI114, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI114, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI114, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI114, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI114, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI114, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI114, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI114, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI114, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI114, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI114, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI114, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI114, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI114, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI114, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI114, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI114, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI114, name: "bottom", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI114, name: "boxSizing", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI114, name: "boxShadow", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI114, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI114, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI114, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI114, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI114, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI114, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI114, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI114, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI114, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI114, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI114, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI114, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI114, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI114, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI114, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI114, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI114, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI114, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI114, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI114, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI114, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI114, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI114, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI114, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI114, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI114, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI114, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI114, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI114, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI114, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI114, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI114, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI114, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI114, name: "opacity", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI114, name: "outline", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI114, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI114, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI114, name: "overflowY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI114, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI114, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI114, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI114, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI114, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI114, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI114, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI114, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI114, name: "position", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI114, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI114, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI114, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI114, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI114, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI114, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI114, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI114, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI114, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI114, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI114, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI114, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI114, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI114, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI114, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI114, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI114, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI114, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI114, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI114, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI114, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI143, name: "zIndex", sons: null}]};
NTI623289.node = NNI623289;
NTI623289.base = NTI6008;
var NNI10187207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI10187207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10187207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10187207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10187207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10187207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10187207, name: "pkSame", len: 0, sons: null}}};
NTI10187207.node = NNI10187207;
NTI623570.base = NTI623231;
NTI623572.base = NTI623231;
NTI623574.base = NTI623231;
var NNI623229 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI623229, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI623229, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI623229, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI623229, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI623229, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI623229, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI623229, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI623229, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI623229, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI623229, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI623229, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI623229, name: "NotationNode", len: 0, sons: null}}};
NTI623229.node = NNI623229;
NTI623287.base = NTI623289;
var NNI623233 = {kind: 2, len: 16, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI623570, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI623572, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI623574, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI114, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI623231, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI623231, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI623231, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI114, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI623229, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI114, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI623231, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI623231, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI114, name: "innerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI114, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI114, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI623287, name: "style", sons: null}]};
NTI623233.node = NNI623233;
var NNI623205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI623378, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI623382, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI623386, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI623390, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI623394, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI623398, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI623402, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI623406, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI623410, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI623414, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI623418, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI623422, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI623426, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI623430, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI623434, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI623438, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI623442, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI623446, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI623450, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI623454, name: "onunload", sons: null}]};
NTI623205.node = NNI623205;
NTI623205.base = NTI6008;
NTI623233.base = NTI623205;
NTI623231.base = NTI623233;
var NNI9731015 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI9731015, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI9731015, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI9731015, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI9731015, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI9731015, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI9731015, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI9731015, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI9731015, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI9731015, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI9731015, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI9731015, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI9731015, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI9731015, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI9731015, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI9731015, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI9731015, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI9731015, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI9731015, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI9731015, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI9731015, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI9731015, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI9731015, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI9731015, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI9731015, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI9731015, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI9731015, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI9731015, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI9731015, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI9731015, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI9731015, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI9731015, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI9731015, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI9731015, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI9731015, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI9731015, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI9731015, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI9731015, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI9731015, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI9731015, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI9731015, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI9731015, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI9731015, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI9731015, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI9731015, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI9731015, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI9731015, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI9731015, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI9731015, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI9731015, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI9731015, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI9731015, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI9731015, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI9731015, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI9731015, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI9731015, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI9731015, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI9731015, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI9731015, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI9731015, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI9731015, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI9731015, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI9731015, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI9731015, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI9731015, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI9731015, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI9731015, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI9731015, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI9731015, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI9731015, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI9731015, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI9731015, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI9731015, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI9731015, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI9731015, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI9731015, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI9731015, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI9731015, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI9731015, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI9731015, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI9731015, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI9731015, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI9731015, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI9731015, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI9731015, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI9731015, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI9731015, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI9731015, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI9731015, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI9731015, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI9731015, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI9731015, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI9731015, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI9731015, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI9731015, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI9731015, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI9731015, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI9731015, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI9731015, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI9731015, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI9731015, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI9731015, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI9731015, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI9731015, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI9731015, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI9731015, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI9731015, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI9731015, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI9731015, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI9731015, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI9731015, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI9731015, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI9731015, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI9731015, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI9731015, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI9731015, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI9731015, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI9731015, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI9731015, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI9731015, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI9731015, name: "menu", len: 0, sons: null}}};
NTI9731015.node = NNI9731015;
NTI9735037.base = NTI9735022;
NTI9735039.base = NTI114;
var NNI9731139 = {kind: 2, offset: 0, typ: null, name: null, len: 32, sons: {"0": {kind: 1, offset: 0, typ: NTI9731139, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI9731139, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI9731139, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI9731139, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI9731139, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI9731139, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI9731139, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI9731139, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI9731139, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI9731139, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI9731139, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI9731139, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI9731139, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI9731139, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI9731139, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI9731139, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI9731139, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI9731139, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI9731139, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI9731139, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI9731139, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI9731139, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI9731139, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI9731139, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI9731139, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI9731139, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI9731139, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI9731139, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI9731139, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI9731139, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI9731139, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI9731139, name: "onload", len: 0, sons: null}}};
NTI9731139.node = NNI9731139;
var NNI9735030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9731139, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI9735074, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI9735078, name: "Field2", sons: null}]};
NTI9735030.node = NNI9735030;
NTI9735018.base = NTI9735030;
var NNI861084 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI861084.node = NNI861084;
NTI861085.base = NTI861084;
var NNI9735031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI9731015, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI143, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI114, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI114, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI114, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI9735037, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI9735039, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI9735018, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI861085, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI623231, name: "dom", sons: null}]};
NTI9735031.node = NNI9735031;
NTI9735031.base = NTI6008;
NTI9735022.base = NTI9735031;
var NNI10187209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI10187207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI623231, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI623231, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI9735022, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI9735022, name: "oldNode", sons: null}]};
NTI10187209.node = NNI10187209;
var NNI10187211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI9735022, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI9735022, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI143, name: "pos", sons: null}]};
NTI10187211.node = NNI10187211;
NTI9770125.base = NTI114;
var NNI1186907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI143, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI1186907.node = NNI1186907;
var NNI6251 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6251.node = NNI6251;
NTI6251.base = NTI6219;
var NNI6253 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6253.node = NNI6253;
NTI6253.base = NTI6219;
var NNI6235 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6235.node = NNI6235;
NTI6235.base = NTI6233;
var NNI11251041 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI11251041, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11251041, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11251041, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11251041, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11251041, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11251041, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11251041, name: "JArray", len: 0, sons: null}}};
NTI11251041.node = NNI11251041;
var NNI11251073 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9901230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI112, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI11251043, name: "Field3", sons: null}]};
NTI11251073.node = NNI11251073;
NTI11251070.base = NTI11251073;
var NNI11251067 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI11251070, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI143, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI143, name: "last", sons: null}]};
NTI11251067.node = NNI11251067;
NTI11251084.base = NTI11251043;
var NNI11251045 = {kind: 3, offset: "kind", len: 7, typ: NTI11251041, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI112, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI179, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI104, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI163, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI11251067, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI11251084, name: "elems", sons: null}]]};
NTI11251045.node = NNI11251045;
NTI11251043.base = NTI11251045;
var NNI6245 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6245.node = NNI6245;
var NNI6243 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6243.node = NNI6243;
var NNI6221 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6221.node = NNI6221;
NTI6221.base = NTI6217;
NTI6243.base = NTI6221;
NTI6245.base = NTI6243;
var NNI11066039 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI11066039.node = NNI11066039;
NTI11066039.base = NTI6243;
var NNI12119016 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "title", len: 0, typ: NTI112, name: "title", sons: null}, 
{kind: 1, offset: "unitPrice", len: 0, typ: NTI104, name: "unitPrice", sons: null}]};
NTI12119016.node = NNI12119016;
var NNI12118016 = {kind: 1, offset: "id", len: 0, typ: NTI143, name: "id", sons: null};
NTI12118016.node = NNI12118016;
NTI12118016.base = NTI6008;
NTI12119016.base = NTI12118016;
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_240023, src_240024, ti_240025) {
  var result_245219 = null;

    switch (ti_240025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_235401(ti_240025))) {
      result_245219 = src_240024;
      }
      else {
        result_245219 = [src_240024[0], src_240024[1]];
      }
      
      break;
    case 19:
            if (dest_240023 === null || dest_240023 === undefined) {
        dest_240023 = {};
      }
      else {
        for (var key in dest_240023) { delete dest_240023[key]; }
      }
      for (var key in src_240024) { dest_240023[key] = src_240024[key]; }
      result_245219 = dest_240023;
    
      break;
    case 18:
    case 17:
      if (!((ti_240025.base == null))) {
      result_245219 = nimCopy(dest_240023, src_240024, ti_240025.base);
      }
      else {
      if ((ti_240025.kind == 17)) {
      result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {m_type: ti_240025} : dest_240023;
      }
      else {
        result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {} : dest_240023;
      }
      }
      nimCopyAux(result_245219, src_240024, ti_240025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_240024 === null) {
        result_245219 = null;
      }
      else {
        if (dest_240023 === null || dest_240023 === undefined) {
          dest_240023 = new Array(src_240024.length);
        }
        else {
          dest_240023.length = src_240024.length;
        }
        result_245219 = dest_240023;
        for (var i = 0; i < src_240024.length; ++i) {
          result_245219[i] = nimCopy(result_245219[i], src_240024[i], ti_240025.base);
        }
      }
    
      break;
    case 28:
            if (src_240024 !== null) {
        result_245219 = src_240024.slice(0);
      }
    
      break;
    default: 
      result_245219 = src_240024;
      break;
    }

  return result_245219;

}
function cstrToNimstr(c_225079) {
      var ln = c_225079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_225079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_225079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function makeNimstrLit(c_225062) {
      var ln = c_225062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_225062.charCodeAt(i);
  }
  return result;
  

  
}
function arrayConstr(len_250067, value_250068, typ_250069) {
        var result = new Array(len_250067);
    for (var i = 0; i < len_250067; ++i) result[i] = nimCopy(null, value_250068, typ_250069);
    return result;
  

  
}
function toJSStr(s_225096) {
                    var Tmp5;
            var Tmp7;

  var result_225097 = null;

    var res_225170 = new_seq_225128((s_225096 != null ? s_225096.length : 0));
    var i_225172 = 0;
    var j_225174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_225172 < (s_225096 != null ? s_225096.length : 0))) break L2;
          var c_225175 = s_225096[i_225172];
          if ((c_225175 < 128)) {
          res_225170[j_225174] = String.fromCharCode(c_225175);
          i_225172 += 1;
          }
          else {
            var helper_225198 = new_seq_225128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_225199 = c_225175.toString(16);
                  if (((code_225199 != null ? code_225199.length : 0) == 1)) {
                  if (helper_225198 != null) { helper_225198.push("%0"); } else { helper_225198 = ["%0"]; };
                  }
                  else {
                  if (helper_225198 != null) { helper_225198.push("%"); } else { helper_225198 = ["%"]; };
                  }
                  
                  if (helper_225198 != null) { helper_225198.push(code_225199); } else { helper_225198 = [code_225199]; };
                  i_225172 += 1;
                    if (((s_225096 != null ? s_225096.length : 0) <= i_225172)) Tmp5 = true; else {                      Tmp5 = (s_225096[i_225172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_225175 = s_225096[i_225172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_225170[j_225174] = decodeURIComponent(helper_225198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_225170[j_225174] = helper_225198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_225174 += 1;
        }
    } while(false);
    if (res_225170 === null) res_225170 = [];
               if (res_225170.length < j_225174) { for (var i=res_225170.length;i<j_225174;++i) res_225170.push(null); }
               else { res_225170.length = j_225174; };
    result_225097 = res_225170.join("");

  return result_225097;

}
function raiseException(e_190218, ename_190219) {
    e_190218.name = ename_190219;
    if ((excHandler == 0)) {
    unhandledException(e_190218);
    }
    
    e_190218.trace = nimCopy(null, raw_write_stack_trace_180059(), NTI112);
    throw e_190218;

  
}
function addInt(a_230403, b_230404) {
        var result = a_230403 + b_230404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
      var to_tag_9735006 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
function chckIndx(i_250086, a_250087, b_250088) {
      var Tmp1;

  var result_250089 = 0;

  BeforeRet: do {
      if (!(a_250087 <= i_250086)) Tmp1 = false; else {        Tmp1 = (i_250086 <= b_250088);      }    if (Tmp1) {
    result_250089 = i_250086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_250086, a_250087, b_250088);
    }
    
  } while (false);

  return result_250089;

}
function subInt(a_230421, b_230422) {
        var result = a_230421 - b_230422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
      var to_event_name_9735012 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load"];
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function nimMin(a_230803, b_230804) {
    var Tmp1;

  var result_230805 = 0;

  BeforeRet: do {
    if ((a_230803 <= b_230804)) {
    Tmp1 = a_230803;
    }
    else {
    Tmp1 = b_230804;
    }
    
    result_230805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230805;

}
var ConstSet2 = setConstr(6);
function raiseFieldError(f_220047) {
    raiseException({message: nimCopy(null, f_220047, NTI112), parent: null, m_type: NTI6251, name: null, trace: null, up: null}, "FieldError");

  
}
function chckRange(i_255016, a_255017, b_255018) {
      var Tmp1;

  var result_255019 = 0;

  BeforeRet: do {
      if (!(a_255017 <= i_255016)) Tmp1 = false; else {        Tmp1 = (i_255016 <= b_255018);      }    if (Tmp1) {
    result_255019 = i_255016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_255019;

}
function divInt(a_230457, b_230458) {
        if (b_230458 == 0) raiseDivByZero();
    if (b_230458 == -1 && a_230457 == 2147483647) raiseOverflow();
    return Math.trunc(a_230457 / b_230458);
  

  
}
function mulInt(a_230439, b_230440) {
        var result = a_230439 * b_230440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function modInt(a_230475, b_230476) {
        if (b_230476 == 0) raiseDivByZero();
    if (b_230476 == -1 && a_230475 == 2147483647) raiseOverflow();
    return Math.trunc(a_230475 % b_230476);
  

  
}
function eqStrings(a_230222, b_230223) {
        if (a_230222 == b_230223) return true;
    if (a_230222 === null && b_230223.length == 0) return true;
    if (b_230223 === null && a_230222.length == 0) return true;
    if ((!a_230222) || (!b_230223)) return false;
    var alen = a_230222.length;
    if (alen != b_230223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_230222[i] != b_230223[i]) return false;
    return true;
  

  
}
function genericReset(x_250044, ti_250045) {
  var result_250046 = null;

    result_250046 = null;
    switch (ti_250045.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (is_fat_pointer_235401(ti_250045)) {
              result_250046 = [null, 0];
      
      }
      
      break;
    case 19:
            result_250046 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_250045.kind == 17)) {
      result_250046 = {m_type: ti_250045};
      }
      else {
        result_250046 = {};
      }
      
      break;
    case 24:
    case 27:
            result_250046 = [];
    
      break;
    case 4:
    case 16:
            result_250046 = new Array(x_250044.length);
      for (var i = 0; i < x_250044.length; ++i) {
        result_250046[i] = genericReset(x_250044[i], ti_250045.base);
      }
    
      break;
    default: 
      break;
    }

  return result_250046;

}
var ConstSet3 = setConstr(5);
var ConstSet4 = setConstr(4);
var ConstSet5 = setConstr(4);
var ConstSet6 = setConstr(2);
var ConstSet7 = setConstr(2);
var ConstSet8 = setConstr(3);
var ConstSet9 = setConstr(3);
var ConstSet10 = setConstr(1);
var ConstSet11 = setConstr(1);
var ConstSet12 = setConstr(6);
var ConstSet13 = setConstr(6);
var ConstSet14 = setConstr(5);
var ConstSet15 = setConstr(5);
var ConstSet16 = setConstr(5);
var ConstSet17 = setConstr(5);
var ConstSet18 = setConstr(5);
var ConstSet19 = setConstr(5, 0);
function mnewString(len_230044) {
        return new Array(len_230044);
  

  
}
function addChar(x_275031, c_275032) {
    x_275031.push(c_275032);

  
}
var ConstSet20 = setConstr([48, 57]);
var ConstSet21 = setConstr(0, 125);
var ConstSet22 = setConstr([48, 57]);
var ConstSet23 = setConstr([65, 90]);
function nimMax(a_230821, b_230822) {
    var Tmp1;

  var result_230823 = 0;

  BeforeRet: do {
    if ((b_230822 <= a_230821)) {
    Tmp1 = a_230821;
    }
    else {
    Tmp1 = b_230822;
    }
    
    result_230823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230823;

}
var ConstSet24 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
function reprEnum(e_315480, typ_315481) {
  var result_315482 = null;

  var F={procname:"system.reprEnum",prev:framePtr,filename:"reprjs.nim",line:0};
  framePtr = F;
    if (!(is_undefined_315483(typ_315481.node.sons[e_315480]))) {
    F.line = 38;
    result_315482 = nimCopy(null, makeNimstrLit(typ_315481.node.sons[e_315480].name), NTI112);
    }
    else {
      F.line = 40;
      result_315482 = nimCopy(null, (cstrToNimstr((e_315480)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI112);
    }
    
  framePtr = F.prev;

  return result_315482;

}
var ConstSet25 = setConstr(5, 0);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(2);
var ConstSet29 = setConstr(5);
var ConstSet30 = setConstr(4, 0);
var ConstSet31 = setConstr(4, 0);
var ConstSet32 = setConstr(4);
var ConstSet33 = setConstr(2, 3);
var ConstSet34 = setConstr(2, 3);
var ConstSet35 = setConstr(3);
var ConstSet36 = setConstr(2);
var nim_program_result = 0;
var global_raise_hook_142018 = [null];
var local_raise_hook_142023 = [null];
var out_of_mem_hook_142026 = [null];
var unhandled_exception_hook_142031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var gid_9770032 = [0];
var object_id_9905031 = [0];
var vcomponents_10066026 = [{}];
var kxi_10187284 = [null];
var s_12120049 = [null];
function init_tweet_box_12096017() {
  var result_12096019 = ({tweetText: null});

  var F={procname:"tweetbox.initTweetBox",prev:framePtr,filename:"tweetbox.nim",line:0};
  framePtr = F;
    F.line = 13;
    result_12096019.tweetText = "";
  framePtr = F.prev;

  return result_12096019;

}
function is_fat_pointer_235401(ti_235403) {
  var result_235404 = false;

  BeforeRet: do {
    result_235404 = !((ConstSet1[ti_235403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_235404;

}
function nimCopyAux(dest_240028, src_240029, n_240031) {
    switch (n_240031.kind) {
    case 0:
      break;
    case 1:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_240031.sons.length; i++) {
      nimCopyAux(dest_240028, src_240029, n_240031.sons[i]);
    }
    
      break;
    case 3:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
      for (var i = 0; i < n_240031.sons.length; ++i) {
        nimCopyAux(dest_240028, src_240029, n_240031.sons[i][1]);
      }
    
      break;
    }

  
}
function init_state_12120018() {
  var result_12120020 = ({tweetBox: ({tweetText: null}), anotherTweetBox: ({tweetText: null})});

  var F={procname:"index.initState",prev:framePtr,filename:"index.nim",line:0};
  framePtr = F;
    F.line = 17;
    nimCopy(result_12120020.tweetBox, init_tweet_box_12096017(), NTI12096015);
    F.line = 18;
    nimCopy(result_12120020.anotherTweetBox, init_tweet_box_12096017(), NTI12096015);
  framePtr = F.prev;

  return result_12120020;

}
function add_142042(x_142045, x_142045_Idx, y_142046) {
          if (x_142045[x_142045_Idx] === null) { x_142045[x_142045_Idx] = []; }
      var off = x_142045[x_142045_Idx].length;
      x_142045[x_142045_Idx].length += y_142046.length;
      for (var i = 0; i < y_142046.length; ++i) {
        x_142045[x_142045_Idx][off+i] = y_142046.charCodeAt(i);
      }
    

  
}
function aux_write_stack_trace_160038(f_160040) {
          var Tmp3;

  var result_160041 = [null];

    var it_160049 = f_160040;
    var i_160051 = 0;
    var total_160053 = 0;
    var temp_frames_160060 = arrayConstr(64, {Field0: null, Field1: 0}, NTI160043);
    L1: do {
        L2: while (true) {
          if (!!((it_160049 == null))) Tmp3 = false; else {            Tmp3 = (i_160051 <= 63);          }        if (!Tmp3) break L2;
          temp_frames_160060[i_160051].Field0 = it_160049.procname;
          temp_frames_160060[i_160051].Field1 = it_160049.line;
          i_160051 += 1;
          total_160053 += 1;
          it_160049 = it_160049.prev;
        }
    } while(false);
    L4: do {
        L5: while (true) {
        if (!!((it_160049 == null))) break L5;
          total_160053 += 1;
          it_160049 = it_160049.prev;
        }
    } while(false);
    result_160041[0] = nimCopy(null, [], NTI112);
    if (!((total_160053 == i_160051))) {
    if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit("(")); } else { result_160041[0] = makeNimstrLit("("); };
    if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(cstrToNimstr(((total_160053 - i_160051))+"")); } else { result_160041[0] = cstrToNimstr(((total_160053 - i_160051))+"").slice(); };
    if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_160041[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
    }
    
    L6: do {
      var j_175236 = 0;
      var colontmp__12205223 = 0;
      colontmp__12205223 = (i_160051 - 1);
      var res_12205228 = colontmp__12205223;
      L7: do {
          L8: while (true) {
          if (!(0 <= res_12205228)) break L8;
            j_175236 = res_12205228;
            add_142042(result_160041, 0, temp_frames_160060[j_175236].Field0);
            if ((0 < temp_frames_160060[j_175236].Field1)) {
            if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit(", line: ")); } else { result_160041[0] = makeNimstrLit(", line: "); };
            if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(cstrToNimstr((temp_frames_160060[j_175236].Field1)+"")); } else { result_160041[0] = cstrToNimstr((temp_frames_160060[j_175236].Field1)+"").slice(); };
            }
            
            if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit("\x0A")); } else { result_160041[0] = makeNimstrLit("\x0A"); };
            res_12205228 -= 1;
          }
      } while(false);
    } while(false);

  return result_160041[0];

}
function raw_write_stack_trace_180059() {
  var result_180061 = null;

    if (!((framePtr == null))) {
    result_180061 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_160038(framePtr) || []), NTI112);
    }
    else {
      result_180061 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI112);
    }
    

  return result_180061;

}
function new_seq_225128(len_225131) {
  var result_225133 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_225133 = new Array(len_225131); for (var i=0;i<len_225131;++i) {result_225133[i]=null;}  framePtr = F.prev;

  return result_225133;

}
function unhandledException(e_185059) {
    var buf_185060 = [[]];
    if (!(((e_185059.message != null ? e_185059.message.length : 0) == 0))) {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(e_185059.message); } else { buf_185060[0] = e_185059.message.slice(); };
    }
    else {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit(" [")); } else { buf_185060[0] = makeNimstrLit(" ["); };
    add_142042(buf_185060, 0, e_185059.name);
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("]\x0A")); } else { buf_185060[0] = makeNimstrLit("]\x0A"); };
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(raw_write_stack_trace_180059()); } else { buf_185060[0] = raw_write_stack_trace_180059().slice(); };
    var cbuf_190201 = toJSStr(buf_185060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_190201);
  }
  else {
    throw cbuf_190201;
  }
  

  
}
function new_seq_10745012(len_10745015) {
  var result_10745017 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_10745017 = new Array(len_10745015); for (var i=0;i<len_10745015;++i) {result_10745017[i]=({k: 0, parent: null, current: null, newNode: null, oldNode: null});}  framePtr = F.prev;

  return result_10745017;

}
function new_seq_10745064(len_10745067) {
  var result_10745069 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_10745069 = new Array(len_10745067); for (var i=0;i<len_10745067;++i) {result_10745069[i]=({parent: null, newChild: null, pos: 0});}  framePtr = F.prev;

  return result_10745069;

}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI6237, name: null, trace: null, up: null}, "OverflowError");

  
}
function sys_fatal_102618(message_102622) {
  var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
  framePtr = F;
    F.line = 49;
    raiseException({message: nimCopy(null, message_102622, NTI112), m_type: NTI6241, parent: null, name: null, trace: null, up: null}, "AssertionError");
  framePtr = F.prev;

  
}
function raise_assert_102614(msg_102616) {
  var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 22;
    sys_fatal_102618(msg_102616);
  framePtr = F.prev;

  
}
function failed_assert_impl_102680(msg_102682) {
  var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 29;
    raise_assert_102614(msg_102682);
  framePtr = F.prev;

  
}
function raiseIndexError(i_210047, a_210048, b_210049) {
    var Tmp1;

    if ((b_210049 < a_210048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_210047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_210048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_210049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI112), parent: null, m_type: NTI6249, name: null, trace: null, up: null}, "IndexError");

  
}
function valueHEX3D_9735143(n_9735145, v_9735146) {
  var F={procname:"vdom.value=",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 160;
    n_9735145.text = v_9735146;
  framePtr = F.prev;

  
}
function value_9735126(n_9735128) {
  var result_9735129 = null;

  var F={procname:"vdom.value",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 159;
    result_9735129 = n_9735128.text;
  framePtr = F.prev;

  return result_9735129;

}
function add_event_shell_10187375(d_10187377, name_10187378, h_10187379) {
  var F={procname:"karax.addEventShell",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 89;
    d_10187377.addEventListener(name_10187378, h_10187379, false);
    if ((d_10187377.karaxEvents == null)) {
    F.line = 91;
    d_10187377.karaxEvents = new Array(0);
    }
    
    F.line = 92;
    d_10187377.karaxEvents.push({Field0: name_10187378, Field1: h_10187379});
  framePtr = F.prev;

  
}
function wrap_event_10190097(d_10190099, n_10190100, k_10190101, action_10190102) {
      function later_wrapper_10260042() {
          function HEX3Aanonymous_10260048(ev_10260050) {
              function wrapper_10260051() {
                var F={procname:":anonymous.wrapper",prev:framePtr,filename:"karax.nim",line:0};
                framePtr = F;
                  F.line = 72;
                  var vHEX60gensym10260053_10270001 = ev_10260050.target.value;
                  F.line = 73;
                  valueHEX3D_9735143(n_10260046, vHEX60gensym10260053_10270001);
                  if (!(!((action_10260045 == null)))) {
                  F.line = 74;
                  failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(74, 10) `action != nil` "));
                  }
                  
                  F.line = 75;
                  action_10260045(ev_10260050, n_10260046);
                  if (!((value_9735126(n_10260046) == vHEX60gensym10260053_10270001))) {
                  F.line = 77;
                  ev_10260050.target.value = value_9735126(n_10260046);
                  }
                  
                framePtr = F.prev;

                
              }

            var F={procname:"laterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
            framePtr = F;
              if (!((timer_10260047 == null))) {
              F.line = 121;
              clearTimeout(timer_10260047);
              }
              
              F.line = 122;
              timer_10260047 = setTimeout(wrapper_10260051, 400);
            framePtr = F.prev;

            
          }

        var result_10260044 = null;

        var F={procname:"wrapEvent.laterWrapper",prev:framePtr,filename:"karax.nim",line:0};
        framePtr = F;
          F.line = 116;
          var action_10260045 = action_10190102;
          F.line = 117;
          var n_10260046 = n_10190100;
          F.line = 118;
          var timer_10260047 = null;
          F.line = 119;
          result_10260044 = HEX3Aanonymous_10260048;
        framePtr = F.prev;

        return result_10260044;

      }
      function enter_wrapper_10225042() {
          function HEX3Aanonymous_10225047(ev_10225049) {
            var F={procname:"enterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
            framePtr = F;
              if ((ev_10225049.keyCode == 13)) {
              F.line = 72;
              var vHEX60gensym10225050_10235001 = ev_10225049.target.value;
              F.line = 73;
              valueHEX3D_9735143(n_10225046, vHEX60gensym10225050_10235001);
              if (!(!((action_10225045 == null)))) {
              F.line = 74;
              failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(74, 10) `action != nil` "));
              }
              
              F.line = 75;
              action_10225045(ev_10225049, n_10225046);
              if (!((value_9735126(n_10225046) == vHEX60gensym10225050_10235001))) {
              F.line = 77;
              ev_10225049.target.value = value_9735126(n_10225046);
              }
              
              }
              
            framePtr = F.prev;

            
          }

        var result_10225044 = null;

        var F={procname:"wrapEvent.enterWrapper",prev:framePtr,filename:"karax.nim",line:0};
        framePtr = F;
          F.line = 110;
          var action_10225045 = action_10190102;
          F.line = 111;
          var n_10225046 = n_10190100;
          F.line = 112;
          result_10225044 = HEX3Aanonymous_10225047;
        framePtr = F.prev;

        return result_10225044;

      }
      function std_wrapper_10190104() {
          function HEX3Aanonymous_10190109(ev_10190111) {
                var Tmp1;
                var Tmp2;

            var F={procname:"stdWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
            framePtr = F;
                if ((n_10190108.kind == 111)) Tmp2 = true; else {                  Tmp2 = (n_10190108.kind == 105);                }                if (Tmp2) Tmp1 = true; else {                  Tmp1 = (n_10190108.kind == 107);                }              if (Tmp1) {
              F.line = 72;
              var vHEX60gensym10190130_10200001 = ev_10190111.target.value;
              F.line = 73;
              valueHEX3D_9735143(n_10190108, vHEX60gensym10190130_10200001);
              if (!(!((action_10190107 == null)))) {
              F.line = 74;
              failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(74, 10) `action != nil` "));
              }
              
              F.line = 75;
              action_10190107(ev_10190111, n_10190108);
              if (!((value_9735126(n_10190108) == vHEX60gensym10190130_10200001))) {
              F.line = 77;
              ev_10190111.target.value = value_9735126(n_10190108);
              }
              
              }
              else {
                F.line = 107;
              action_10190107(ev_10190111, n_10190108);
              }
              
            framePtr = F.prev;

            
          }

        var result_10190106 = null;

        var F={procname:"wrapEvent.stdWrapper",prev:framePtr,filename:"karax.nim",line:0};
        framePtr = F;
          F.line = 102;
          var action_10190107 = action_10190102;
          F.line = 103;
          var n_10190108 = n_10190100;
          F.line = 104;
          result_10190106 = HEX3Aanonymous_10190109;
        framePtr = F.prev;

        return result_10190106;

      }

  var result_10190103 = null;

  var F={procname:"karax.wrapEvent",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 124;
    switch (k_10190101) {
    case 30:
      F.line = 126;
      result_10190103 = later_wrapper_10260042();
      F.line = 127;
      add_event_shell_10187375(d_10190099, "keyup", result_10190103);
      break;
    case 29:
      F.line = 129;
      result_10190103 = enter_wrapper_10225042();
      F.line = 130;
      add_event_shell_10187375(d_10190099, "keyup", result_10190103);
      break;
    default: 
      F.line = 132;
      result_10190103 = std_wrapper_10190104();
      F.line = 133;
      add_event_shell_10187375(d_10190099, to_event_name_9735012[chckIndx(k_10190101, 0, (to_event_name_9735012 != null ? to_event_name_9735012.length : 0)+0-1)-0], result_10190103);
      break;
    }
  framePtr = F.prev;

  return result_10190103;

}
function apply_events_10300073(n_10300075) {
  var F={procname:"karax.applyEvents",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 145;
    var dest_10300076 = n_10300075.dom;
    L1: do {
      F.line = 146;
      var i_10300089 = 0;
      F.line = 104;
      var colontmp__12205274 = 0;
      F.line = 146;
      colontmp__12205274 = (n_10300075.events != null ? n_10300075.events.length : 0);
      F.line = 106;
      var i_12205275 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_12205275 < colontmp__12205274)) break L3;
            F.line = 146;
            i_10300089 = i_12205275;
            F.line = 147;
            n_10300075.events[chckIndx(i_10300089, 0, (n_10300075.events != null ? n_10300075.events.length : 0)+0-1)-0]["Field2"] = wrap_event_10190097(dest_10300076, n_10300075, n_10300075.events[chckIndx(i_10300089, 0, (n_10300075.events != null ? n_10300075.events.length : 0)+0-1)-0]["Field0"], n_10300075.events[chckIndx(i_10300089, 0, (n_10300075.events != null ? n_10300075.events.length : 0)+0-1)-0]["Field1"]);
            F.line = 109;
            i_12205275 = addInt(i_12205275, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function apply_style_900425(n_900427, s_900428) {
  var F={procname:"vstyles.applyStyle",prev:framePtr,filename:"vstyles.nim",line:0};
  framePtr = F;
    F.line = 299;
    n_900427.style = {};
    L1: do {
      F.line = 300;
      var i_900621 = 0;
      F.line = 39;
      var colontmp__12205285 = 0;
      F.line = 300;
      colontmp__12205285 = subInt(s_900428.length, 1);
      F.line = 56;
      var res_12205286 = 0;
      L2: do {
        F.line = 57;
          L3: while (true) {
          if (!(res_12205286 <= colontmp__12205285)) break L3;
            F.line = 300;
            i_900621 = res_12205286;
            F.line = 301;
            n_900427.style[s_900428[i_900621]] = s_900428[addInt(i_900621, 1)];
            F.line = 59;
            res_12205286 = addInt(res_12205286, 2);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function to_dom_10300154(n_10300156, use_attached_node_10300157, kxi_10300158) {
      var Tmp9;
      var Tmp10;

  var result_10300159 = null;

  var F={procname:"karax.toDom",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (use_attached_node_10300157) {
    if (!((n_10300156.dom == null))) {
    if (!((n_10300156.id == null))) {
    F.line = 158;
    kxi_10300158.byId[n_10300156.id] = n_10300156;
    }
    
    F.line = 159;
    result_10300159 = n_10300156.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_10300156.kind == 0)) {
    F.line = 161;
    result_10300159 = document.createTextNode(n_10300156.text);
    F.line = 141;
    n_10300156.dom = result_10300159;
    if (!((n_10300156.id == null))) {
    F.line = 142;
    kxi_10187284[0].byId[n_10300156.id] = n_10300156;
    }
    
    }
    else {
    if ((n_10300156.kind == 6)) {
    F.line = 164;
    result_10300159 = document.createElement("div");
    F.line = 165;
    result_10300159.innerHTML = n_10300156.text;
    F.line = 141;
    n_10300156.dom = result_10300159;
    if (!((n_10300156.id == null))) {
    F.line = 142;
    kxi_10187284[0].byId[n_10300156.id] = n_10300156;
    }
    
    F.line = 167;
    break BeforeRet;
    }
    else {
    if ((n_10300156.kind == 3)) {
    F.line = 169;
    var x_10335001 = vcomponents_10066026[0][n_10300156.text](n_10300156.kids);
    F.line = 170;
    result_10300159 = to_dom_10300154(x_10335001, use_attached_node_10300157, kxi_10300158);
    F.line = 141;
    n_10300156.dom = result_10300159;
    if (!((n_10300156.id == null))) {
    F.line = 142;
    kxi_10187284[0].byId[n_10300156.id] = n_10300156;
    }
    
    F.line = 173;
    break BeforeRet;
    }
    else {
    if ((n_10300156.kind == 4)) {
    F.line = 175;
    result_10300159 = n_10300156.dom;
    if (!(!((result_10300159 == null)))) {
    F.line = 176;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(176, 12) `result != nil` "));
    }
    
    F.line = 141;
    n_10300156.dom = result_10300159;
    if (!((n_10300156.id == null))) {
    F.line = 142;
    kxi_10187284[0].byId[n_10300156.id] = n_10300156;
    }
    
    F.line = 179;
    break BeforeRet;
    }
    else {
    if ((n_10300156.kind == 5)) {
    F.line = 181;
    var x_10370022 = n_10300156;
    if (!((x_10370022.onAttachImpl == null))) {
    F.line = 182;
    x_10370022.onAttachImpl(x_10370022);
    }
    
    if (!(!((x_10370022.renderImpl == null)))) {
    F.line = 183;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(183, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_10370022.expanded == null)) {
    F.line = 185;
    x_10370022.expanded = x_10370022.renderImpl(x_10370022);
    }
    
    if (!(!((x_10370022.expanded == null)))) {
    F.line = 187;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(187, 12) `x.expanded != nil` "));
    }
    
    F.line = 188;
    result_10300159 = to_dom_10300154(x_10370022.expanded, use_attached_node_10300157, kxi_10300158);
    F.line = 141;
    n_10300156.dom = result_10300159;
    if (!((n_10300156.id == null))) {
    F.line = 142;
    kxi_10187284[0].byId[n_10300156.id] = n_10300156;
    }
    
    F.line = 190;
    break BeforeRet;
    }
    else {
      F.line = 192;
      result_10300159 = document.createElement(to_tag_9735006[chckIndx(n_10300156.kind, 0, (to_tag_9735006 != null ? to_tag_9735006.length : 0)+0-1)-0]);
      F.line = 141;
      n_10300156.dom = result_10300159;
      if (!((n_10300156.id == null))) {
      F.line = 142;
      kxi_10187284[0].byId[n_10300156.id] = n_10300156;
      }
      
      L1: do {
        F.line = 194;
        var k_10425016 = null;
        L2: do {
          F.line = 286;
          var i_12205243 = 0;
          F.line = 104;
          var colontmp__12205244 = 0;
          F.line = 286;
          colontmp__12205244 = (n_10300156.kids != null ? n_10300156.kids.length : 0);
          F.line = 106;
          var i_12205245 = 0;
          L3: do {
            F.line = 107;
              L4: while (true) {
              if (!(i_12205245 < colontmp__12205244)) break L4;
                F.line = 286;
                i_12205243 = i_12205245;
                F.line = 194;
                k_10425016 = n_10300156.kids[chckIndx(i_12205243, 0, (n_10300156.kids != null ? n_10300156.kids.length : 0)+0-1)-0];
                F.line = 195;
                result_10300159.appendChild(to_dom_10300154(k_10425016, use_attached_node_10300157, kxi_10300158));
                F.line = 109;
                i_12205245 = addInt(i_12205245, 1);
              }
          } while(false);
        } while(false);
      } while(false);
      if (!((n_10300156.text == null))) {
      F.line = 198;
      result_10300159.value = n_10300156.text;
      }
      
    }
    }}}}
    if (!((n_10300156.id == null))) {
    F.line = 200;
    result_10300159.id = n_10300156.id;
    }
    
    if (!((n_10300156.class == null))) {
    F.line = 202;
    result_10300159.className = n_10300156.class;
    }
    
    L5: do {
      F.line = 205;
      var k_10440001 = null;
      F.line = 205;
      var v_10440002 = null;
      L6: do {
        F.line = 289;
        var i_12205256 = 0;
        F.line = 39;
        var colontmp__12205257 = 0;
        F.line = 289;
        colontmp__12205257 = subInt((n_10300156.attrs != null ? n_10300156.attrs.length : 0), 2);
        F.line = 56;
        var res_12205258 = 0;
        L7: do {
          F.line = 57;
            L8: while (true) {
            if (!(res_12205258 <= colontmp__12205257)) break L8;
              F.line = 289;
              i_12205256 = res_12205258;
              F.line = 205;
              k_10440001 = n_10300156.attrs[chckIndx(i_12205256, 0, (n_10300156.attrs != null ? n_10300156.attrs.length : 0)+0-1)-0];
              F.line = 290;
              v_10440002 = n_10300156.attrs[chckIndx(addInt(i_12205256, 1), 0, (n_10300156.attrs != null ? n_10300156.attrs.length : 0)+0-1)-0];
              if (!((v_10440002 == null))) {
              F.line = 207;
              result_10300159.setAttribute(k_10440001, v_10440002);
              }
              
              F.line = 59;
              res_12205258 = addInt(res_12205258, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    F.line = 208;
    apply_events_10300073(n_10300156);
      if (!!((kxi_10300158 == null))) Tmp10 = false; else {        Tmp10 = (n_10300156 == kxi_10300158.toFocusV);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = (kxi_10300158.toFocus == null);      }    if (Tmp9) {
    F.line = 210;
    kxi_10300158.toFocus = result_10300159;
    }
    
    if (!((n_10300156.style == null))) {
    F.line = 211;
    apply_style_900425(result_10300159, n_10300156.style);
    }
    
  } while (false);
  framePtr = F.prev;

  return result_10300159;

}
function replace_by_id_10465074(id_10465076, new_tree_10465077) {
  var F={procname:"karax.replaceById",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 235;
    var x_10465078 = document.getElementById(id_10465076);
    F.line = 236;
    x_10465078.parentNode.replaceChild(new_tree_10465077, x_10465078);
    F.line = 237;
    new_tree_10465077.id = id_10465076;
  framePtr = F.prev;

  
}
function len_9820014(x_9820016) {
  var result_9820017 = 0;

  var F={procname:"vdom.len",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 250;
    result_9820017 = (x_9820016.kids != null ? x_9820016.kids.length : 0);
  framePtr = F.prev;

  return result_9820017;

}
function HEX5BHEX5D_9820036(x_9820038, idx_9820039) {
  var result_9820040 = null;

  var F={procname:"vdom.[]",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 251;
    result_9820040 = x_9820038.kids[chckIndx(idx_9820039, 0, (x_9820038.kids != null ? x_9820038.kids.length : 0)+0-1)-0];
  framePtr = F.prev;

  return result_9820040;

}
function same_10450072(n_10450074, e_10450075, nesting_10450076) {
      var Tmp1;
      var Tmp2;

  var result_10450078 = false;

  var F={procname:"karax.same",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (kxi_10187284[0].orphans.hasOwnProperty(n_10450074.id)) {
    F.line = 214;
    result_10450078 = true;
    break BeforeRet;
    }
    
    if ((n_10450074.kind == 5)) {
    F.line = 216;
    result_10450078 = same_10450072(n_10450074.expanded, e_10450075, addInt(nesting_10450076, 1));
    }
    else {
    if ((n_10450074.kind == 6)) {
    F.line = 218;
    result_10450078 = true;
    }
    else {
      if ((n_10450074.kind == 3)) Tmp1 = true; else {        Tmp1 = (n_10450074.kind == 4);      }    if (Tmp1) {
    F.line = 221;
    result_10450078 = true;
    }
    else {
    if ((to_tag_9735006[chckIndx(n_10450074.kind, 0, (to_tag_9735006 != null ? to_tag_9735006.length : 0)+0-1)-0] == e_10450075.nodeName)) {
    F.line = 223;
    result_10450078 = true;
    if (!((n_10450074.kind == 0))) {
      if (!!((e_10450075.childNodes.length == len_9820014(n_10450074)))) Tmp2 = false; else {        Tmp2 = !((n_10450074.kind == 111));      }    if (Tmp2) {
    F.line = 227;
    rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_9820014(n_10450074))+""), makeNimstrLit(" real "), cstrToNimstr((e_10450075.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_9735006[chckIndx(n_10450074.kind, 0, (to_tag_9735006 != null ? to_tag_9735006.length : 0)+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_10450076)+""));
    F.line = 228;
    result_10450078 = false;
    break BeforeRet;
    }
    
    L3: do {
      F.line = 229;
      var i_10465024 = 0;
      F.line = 104;
      var colontmp__12205292 = 0;
      F.line = 229;
      colontmp__12205292 = len_9820014(n_10450074);
      F.line = 106;
      var i_12205293 = 0;
      L4: do {
        F.line = 107;
          L5: while (true) {
          if (!(i_12205293 < colontmp__12205292)) break L5;
            F.line = 229;
            i_10465024 = i_12205293;
            if (!(same_10450072(HEX5BHEX5D_9820036(n_10450074, i_10465024), e_10450075.childNodes[i_10465024], addInt(nesting_10450076, 1)))) {
            F.line = 230;
            result_10450078 = false;
            break BeforeRet;
            }
            
            F.line = 109;
            i_12205293 = addInt(i_12205293, 1);
          }
      } while(false);
    } while(false);
    }
    
    }
    else {
      F.line = 232;
    rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_9735006[chckIndx(n_10450074.kind, 0, (to_tag_9735006 != null ? to_tag_9735006.length : 0)+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_10450075.nodeName));
    }
    }}}
  } while (false);
  framePtr = F.prev;

  return result_10450078;

}
function eq_865229(a_865231, b_865232) {
  var result_865233 = false;

  var F={procname:"vstyles.eq",prev:framePtr,filename:"vstyles.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((a_865231 == null)) {
    if ((b_865232 == null)) {
    F.line = 229;
    result_865233 = true;
    break BeforeRet;
    }
    else {
      F.line = 230;
      result_865233 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_865232 == null)) {
    F.line = 231;
    result_865233 = false;
    break BeforeRet;
    }
    }
    if (!((a_865231.length == b_865232.length))) {
    F.line = 232;
    result_865233 = false;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 233;
      var i_870083 = 0;
      F.line = 104;
      var colontmp__12205332 = 0;
      F.line = 233;
      colontmp__12205332 = a_865231.length;
      F.line = 106;
      var i_12205333 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_12205333 < colontmp__12205332)) break L3;
            F.line = 233;
            i_870083 = i_12205333;
            if (!((a_865231[i_870083] == b_865232[i_870083]))) {
            F.line = 234;
            result_865233 = false;
            break BeforeRet;
            }
            
            F.line = 109;
            i_12205333 = addInt(i_12205333, 1);
          }
      } while(false);
    } while(false);
    F.line = 235;
    result_865233 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_865233;

}
function same_attrs_9830879(a_9830881, b_9830882) {
  var result_9830883 = false;

  var F={procname:"vdom.sameAttrs",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((a_9830881.attrs != null ? a_9830881.attrs.length : 0) == (b_9830882.attrs != null ? b_9830882.attrs.length : 0))) {
    F.line = 294;
    result_9830883 = true;
    L1: do {
      F.line = 295;
      var i_9830906 = 0;
      F.line = 104;
      var colontmp__12205336 = 0;
      F.line = 295;
      colontmp__12205336 = (a_9830881.attrs != null ? a_9830881.attrs.length : 0);
      F.line = 106;
      var i_12205337 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_12205337 < colontmp__12205336)) break L3;
            F.line = 295;
            i_9830906 = i_12205337;
            if (!((a_9830881.attrs[chckIndx(i_9830906, 0, (a_9830881.attrs != null ? a_9830881.attrs.length : 0)+0-1)-0] == b_9830882.attrs[chckIndx(i_9830906, 0, (b_9830882.attrs != null ? b_9830882.attrs.length : 0)+0-1)-0]))) {
            F.line = 296;
            result_9830883 = false;
            break BeforeRet;
            }
            
            F.line = 109;
            i_12205337 = addInt(i_12205337, 1);
          }
      } while(false);
    } while(false);
    }
    
  } while (false);
  framePtr = F.prev;

  return result_9830883;

}
function eq_10465214(a_10465216, b_10465217, recursive_10465218) {
      var Tmp4;
      var Tmp5;

  var result_10465219 = 0;

  var F={procname:"karax.eq",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!((a_10465216.kind == b_10465217.kind))) {
    F.line = 259;
    result_10465219 = 1;
    break BeforeRet;
    }
    
    if (!((a_10465216.id == b_10465217.id))) {
    F.line = 262;
    result_10465219 = 1;
    break BeforeRet;
    }
    
    F.line = 263;
    result_10465219 = 3;
    if (!((a_10465216.index == b_10465217.index))) {
    F.line = 266;
    result_10465219 = 1;
    break BeforeRet;
    }
    
    if ((a_10465216.kind == 0)) {
    if (!((a_10465216.text == b_10465217.text))) {
    F.line = 270;
    result_10465219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_10465216.kind == 3)) {
    if (!((a_10465216.text == b_10465217.text))) {
    F.line = 272;
    result_10465219 = 1;
    break BeforeRet;
    }
    
    if (!((len_9820014(a_10465216) == len_9820014(b_10465217)))) {
    F.line = 273;
    result_10465219 = 1;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 274;
      var i_10495008 = 0;
      F.line = 104;
      var colontmp__12205324 = 0;
      F.line = 274;
      colontmp__12205324 = len_9820014(a_10465216);
      F.line = 106;
      var i_12205325 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_12205325 < colontmp__12205324)) break L3;
            F.line = 274;
            i_10495008 = i_12205325;
            if ((eq_10465214(HEX5BHEX5D_9820036(a_10465216, i_10495008), HEX5BHEX5D_9820036(b_10465217, i_10495008), recursive_10465218) == 1)) {
            F.line = 275;
            result_10465219 = 1;
            break BeforeRet;
            }
            
            F.line = 109;
            i_12205325 = addInt(i_12205325, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((a_10465216.kind == 4)) {
    if ((a_10465216.dom == b_10465217.dom)) {
    F.line = 278;
    result_10465219 = 3;
    break BeforeRet;
    }
    else {
      F.line = 280;
      result_10465219 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_10465216.kind == 6)) {
    if (!((a_10465216.text == b_10465217.text))) {
    F.line = 283;
    result_10465219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_10465217.kind == 5)) {
    if (!((a_10465216.text == b_10465217.text))) {
    F.line = 288;
    result_10465219 = 1;
    break BeforeRet;
    }
    
    if (!((a_10465216.key == b_10465217.key))) {
    F.line = 294;
    result_10465219 = 1;
    break BeforeRet;
    }
    
    F.line = 295;
    result_10465219 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_10465216.class == b_10465217.class))) Tmp5 = true; else {        Tmp5 = !(eq_865229(a_10465216.style, b_10465217.style));      }      if (Tmp5) Tmp4 = true; else {        Tmp4 = !(same_attrs_9830879(a_10465216, b_10465217));      }    if (Tmp4) {
    F.line = 301;
    result_10465219 = 2;
    break BeforeRet;
    }
    
    if (recursive_10465218) {
    if (!((len_9820014(a_10465216) == len_9820014(b_10465217)))) {
    F.line = 305;
    result_10465219 = 1;
    break BeforeRet;
    }
    
    L6: do {
      F.line = 306;
      var i_10520008 = 0;
      F.line = 104;
      var colontmp__12205328 = 0;
      F.line = 306;
      colontmp__12205328 = len_9820014(a_10465216);
      F.line = 106;
      var i_12205329 = 0;
      L7: do {
        F.line = 107;
          L8: while (true) {
          if (!(i_12205329 < colontmp__12205328)) break L8;
            F.line = 306;
            i_10520008 = i_12205329;
            if (!((eq_10465214(HEX5BHEX5D_9820036(a_10465216, i_10520008), HEX5BHEX5D_9820036(b_10465217, i_10520008), true) == 3))) {
            F.line = 308;
            result_10465219 = 1;
            break BeforeRet;
            }
            
            F.line = 109;
            i_12205329 = addInt(i_12205329, 1);
          }
      } while(false);
    } while(false);
    }
    
    F.line = 311;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_10465219;

}
function update_styles_10525034(new_node_10525036, old_node_10525037) {
  var F={procname:"karax.updateStyles",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    if (!((old_node_10525037.dom == null))) {
    if (!((new_node_10525036.style == null))) {
    F.line = 316;
    apply_style_900425(old_node_10525037.dom, new_node_10525036.style);
    }
    else {
      F.line = 317;
      old_node_10525037.dom.style = {m_type: NTI623289, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxSizing: null, boxShadow: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, opacity: null, outline: null, overflow: null, overflowX: null, overflowY: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, resize: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
    }
    
    F.line = 318;
    old_node_10525037.dom.className = new_node_10525036.class;
    }
    
    F.line = 319;
    old_node_10525037.style = new_node_10525036.style;
    F.line = 320;
    old_node_10525037.class = new_node_10525036.class;
  framePtr = F.prev;

  
}
function take_over_attr_9770212(new_node_9770214, old_node_9770215) {
  var F={procname:"vdom.takeOverAttr",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 234;
    old_node_9770215.attrs = new_node_9770214.attrs;
  framePtr = F.prev;

  
}
function update_attributes_10535052(new_node_10535054, old_node_10535055) {
  var F={procname:"karax.updateAttributes",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    if (!((old_node_10535055.dom == null))) {
    L1: do {
      F.line = 325;
      var k_10540009 = null;
      F.line = 325;
      var __10540010 = null;
      L2: do {
        F.line = 289;
        var i_12205342 = 0;
        F.line = 39;
        var colontmp__12205343 = 0;
        F.line = 289;
        colontmp__12205343 = subInt((old_node_10535055.attrs != null ? old_node_10535055.attrs.length : 0), 2);
        F.line = 56;
        var res_12205344 = 0;
        L3: do {
          F.line = 57;
            L4: while (true) {
            if (!(res_12205344 <= colontmp__12205343)) break L4;
              F.line = 289;
              i_12205342 = res_12205344;
              F.line = 325;
              k_10540009 = old_node_10535055.attrs[chckIndx(i_12205342, 0, (old_node_10535055.attrs != null ? old_node_10535055.attrs.length : 0)+0-1)-0];
              F.line = 290;
              __10540010 = old_node_10535055.attrs[chckIndx(addInt(i_12205342, 1), 0, (old_node_10535055.attrs != null ? old_node_10535055.attrs.length : 0)+0-1)-0];
              F.line = 326;
              old_node_10535055.dom.removeAttribute(k_10540009);
              F.line = 59;
              res_12205344 = addInt(res_12205344, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    L5: do {
      F.line = 327;
      var k_10540011 = null;
      F.line = 327;
      var v_10540012 = null;
      L6: do {
        F.line = 289;
        var i_12205350 = 0;
        F.line = 39;
        var colontmp__12205351 = 0;
        F.line = 289;
        colontmp__12205351 = subInt((new_node_10535054.attrs != null ? new_node_10535054.attrs.length : 0), 2);
        F.line = 56;
        var res_12205352 = 0;
        L7: do {
          F.line = 57;
            L8: while (true) {
            if (!(res_12205352 <= colontmp__12205351)) break L8;
              F.line = 289;
              i_12205350 = res_12205352;
              F.line = 327;
              k_10540011 = new_node_10535054.attrs[chckIndx(i_12205350, 0, (new_node_10535054.attrs != null ? new_node_10535054.attrs.length : 0)+0-1)-0];
              F.line = 290;
              v_10540012 = new_node_10535054.attrs[chckIndx(addInt(i_12205350, 1), 0, (new_node_10535054.attrs != null ? new_node_10535054.attrs.length : 0)+0-1)-0];
              if (!((v_10540012 == null))) {
              F.line = 329;
              old_node_10535055.dom.setAttribute(k_10540011, v_10540012);
              }
              
              F.line = 59;
              res_12205352 = addInt(res_12205352, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    F.line = 330;
    take_over_attr_9770212(new_node_10535054, old_node_10535055);
  framePtr = F.prev;

  
}
function remove_all_event_handlers_10187436(d_10187438) {
  var F={procname:"karax.removeAllEventHandlers",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    if (!((d_10187438.karaxEvents == null))) {
    L1: do {
      F.line = 96;
      var i_10190041 = 0;
      F.line = 104;
      var colontmp__12205357 = 0;
      F.line = 96;
      colontmp__12205357 = d_10187438.karaxEvents.length;
      F.line = 106;
      var i_12205358 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_12205358 < colontmp__12205357)) break L3;
            F.line = 96;
            i_10190041 = i_12205358;
            F.line = 97;
            d_10187438.removeEventListener(d_10187438.karaxEvents[i_10190041]["Field0"], d_10187438.karaxEvents[i_10190041]["Field1"]);
            F.line = 109;
            i_12205358 = addInt(i_12205358, 1);
          }
      } while(false);
    } while(false);
    }
    
  framePtr = F.prev;

  
}
function merge_events_10545014(new_node_10545016, old_node_10545017, kxi_10545018) {
  var F={procname:"karax.mergeEvents",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 333;
    var d_10545019 = old_node_10545017.dom;
    if (!((d_10545019 == null))) {
    F.line = 335;
    remove_all_event_handlers_10187436(d_10545019);
    }
    
    F.line = 343;
    old_node_10545017.events = new_node_10545016.events;
    F.line = 344;
    apply_events_10300073(old_node_10545017);
  framePtr = F.prev;

  
}
function add_patch_10550414(kxi_10550416, ka_10550417, parenta_10550418, currenta_10550419, na_10550420, old_node_10550421) {
  var F={procname:"karax.addPatch",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 361;
    var l_10550422 = kxi_10550416.patchLen;
    if (((kxi_10550416.patches != null ? kxi_10550416.patches.length : 0) <= l_10550422)) {
    F.line = 364;
    if (kxi_10550416.patches != null) { kxi_10550416.patches.push({k: ka_10550417, parent: parenta_10550418, current: currenta_10550419, newNode: na_10550420, oldNode: old_node_10550421}); } else { kxi_10550416.patches = [{k: ka_10550417, parent: parenta_10550418, current: currenta_10550419, newNode: na_10550420, oldNode: old_node_10550421}]; };
    }
    else {
      F.line = 367;
      kxi_10550416.patches[chckIndx(l_10550422, 0, (kxi_10550416.patches != null ? kxi_10550416.patches.length : 0)+0-1)-0].k = ka_10550417;
      F.line = 368;
      kxi_10550416.patches[chckIndx(l_10550422, 0, (kxi_10550416.patches != null ? kxi_10550416.patches.length : 0)+0-1)-0].parent = parenta_10550418;
      F.line = 369;
      kxi_10550416.patches[chckIndx(l_10550422, 0, (kxi_10550416.patches != null ? kxi_10550416.patches.length : 0)+0-1)-0].current = currenta_10550419;
      F.line = 370;
      kxi_10550416.patches[chckIndx(l_10550422, 0, (kxi_10550416.patches != null ? kxi_10550416.patches.length : 0)+0-1)-0].newNode = na_10550420;
      F.line = 371;
      kxi_10550416.patches[chckIndx(l_10550422, 0, (kxi_10550416.patches != null ? kxi_10550416.patches.length : 0)+0-1)-0].oldNode = old_node_10550421;
    }
    
    F.line = 372;
    kxi_10550416.patchLen = addInt(kxi_10550416.patchLen, 1);
  framePtr = F.prev;

  
}
function diff_10600215(new_node_10600217, old_node_10600218, parent_10600219, current_10600220, kxi_10600221) {
        var Tmp1;
            var Tmp6;

  var F={procname:"karax.diff",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 463;
    var result_10600401 = eq_10465214(new_node_10600217, old_node_10600218, false);
    F.line = 464;
    switch (result_10600401) {
    case 0:
      F.line = 466;
      if (kxi_10600221.components != null) { kxi_10600221.components.push({oldNode: old_node_10600218, newNode: new_node_10600217, parent: parent_10600219, current: current_10600220}); } else { kxi_10600221.components = [{oldNode: old_node_10600218, newNode: new_node_10600217, parent: parent_10600219, current: current_10600220}]; };
      break;
    case 3:
    case 2:
      F.line = 471;
      new_node_10600217.dom = old_node_10600218.dom;
      if ((result_10600401 == 2)) {
      F.line = 473;
      update_styles_10525034(new_node_10600217, old_node_10600218);
      F.line = 474;
      update_attributes_10535052(new_node_10600217, old_node_10600218);
      if ((old_node_10600218.kind == 0)) {
      F.line = 476;
      old_node_10600218.text = new_node_10600217.text;
      F.line = 477;
      old_node_10600218.dom.nodeValue = new_node_10600217.text;
      }
      
      }
      
        if (!(((new_node_10600217.events != null ? new_node_10600217.events.length : 0) == 0))) Tmp1 = true; else {          Tmp1 = !(((old_node_10600218.events != null ? old_node_10600218.events.length : 0) == 0));        }      if (Tmp1) {
      F.line = 480;
      merge_events_10545014(new_node_10600217, old_node_10600218, kxi_10600221);
      }
      
      F.line = 482;
      var new_length_10610006 = len_9820014(new_node_10600217);
      F.line = 483;
      var old_length_10610007 = len_9820014(old_node_10600218);
      if (((new_length_10610006 == 0) && (old_length_10610007 == 0))) {
      F.line = 484;
      break BeforeRet;
      }
      
      F.line = 485;
      var min_length_10610008 = nimMin(new_length_10610006, old_length_10610007);
      if (!((old_node_10600218.kind == new_node_10600217.kind))) {
      F.line = 487;
      failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(487, 12) `oldNode.kind == newNode.kind` "));
      }
      
      F.line = 488;
      var common_prefix_10620202 = 0;
      L2: do {
        F.line = 491;
          L3: while (true) {
          if (!(common_prefix_10620202 < min_length_10610008)) break L3;
            if ((eq_10465214(HEX5BHEX5D_9820036(new_node_10600217, common_prefix_10620202), HEX5BHEX5D_9820036(old_node_10600218, common_prefix_10620202), true) == 3)) {
            F.line = 493;
            add_patch_10550414(kxi_10600221, 5, null, null, HEX5BHEX5D_9820036(new_node_10600217, common_prefix_10620202), HEX5BHEX5D_9820036(old_node_10600218, common_prefix_10620202));
            F.line = 494;
            common_prefix_10620202 = addInt(common_prefix_10620202, 1);
            }
            else {
              F.line = 496;
              break L2;
            }
            
          }
      } while(false);
      F.line = 499;
      var old_pos_10620214 = subInt(old_length_10610007, 1);
      F.line = 500;
      var new_pos_10620215 = subInt(new_length_10610006, 1);
      L4: do {
        F.line = 501;
          L5: while (true) {
            if (!(common_prefix_10620202 <= old_pos_10620214)) Tmp6 = false; else {              Tmp6 = (common_prefix_10620202 <= new_pos_10620215);            }          if (!Tmp6) break L5;
            if ((eq_10465214(HEX5BHEX5D_9820036(new_node_10600217, new_pos_10620215), HEX5BHEX5D_9820036(old_node_10600218, old_pos_10620214), true) == 3)) {
            F.line = 503;
            add_patch_10550414(kxi_10600221, 5, null, null, HEX5BHEX5D_9820036(new_node_10600217, new_pos_10620215), HEX5BHEX5D_9820036(old_node_10600218, old_pos_10620214));
            F.line = 504;
            old_pos_10620214 = subInt(old_pos_10620214, 1);
            F.line = 505;
            new_pos_10620215 = subInt(new_pos_10620215, 1);
            }
            else {
              F.line = 507;
              break L4;
            }
            
          }
      } while(false);
      F.line = 509;
      var pos_10630018 = addInt(nimMin(old_pos_10620214, new_pos_10620215), 1);
      L7: do {
        F.line = 511;
        var i_10630024 = 0;
        F.line = 66;
        var colontmp__12205299 = 0;
        F.line = 511;
        colontmp__12205299 = subInt(pos_10630018, 1);
        F.line = 77;
        var res_12205300 = common_prefix_10620202;
        L8: do {
          F.line = 78;
            L9: while (true) {
            if (!(res_12205300 <= colontmp__12205299)) break L9;
              F.line = 511;
              i_10630024 = res_12205300;
              F.line = 512;
              diff_10600215(HEX5BHEX5D_9820036(new_node_10600217, i_10630024), HEX5BHEX5D_9820036(old_node_10600218, i_10630024), current_10600220, current_10600220.childNodes[chckIndx(i_10630024, 0, (current_10600220.childNodes != null ? current_10600220.childNodes.length : 0)+0-1)-0], kxi_10600221);
              F.line = 80;
              res_12205300 = addInt(res_12205300, 1);
            }
        } while(false);
      } while(false);
      if ((addInt(old_pos_10620214, 1) == old_length_10610007)) {
      L10: do {
        F.line = 515;
        var i_10630030 = 0;
        F.line = 77;
        var res_12205306 = pos_10630018;
        L11: do {
          F.line = 78;
            L12: while (true) {
            if (!(res_12205306 <= new_pos_10620215)) break L12;
              F.line = 515;
              i_10630030 = res_12205306;
              F.line = 516;
              add_patch_10550414(kxi_10600221, 2, current_10600220, null, HEX5BHEX5D_9820036(new_node_10600217, i_10630030), null);
              F.line = 80;
              res_12205306 = addInt(res_12205306, 1);
            }
        } while(false);
      } while(false);
      }
      else {
        F.line = 518;
        var before_10630031 = current_10600220.childNodes[chckIndx(addInt(old_pos_10620214, 1), 0, (current_10600220.childNodes != null ? current_10600220.childNodes.length : 0)+0-1)-0];
        L13: do {
          F.line = 519;
          var i_10630037 = 0;
          F.line = 77;
          var res_12205312 = pos_10630018;
          L14: do {
            F.line = 78;
              L15: while (true) {
              if (!(res_12205312 <= new_pos_10620215)) break L15;
                F.line = 519;
                i_10630037 = res_12205312;
                F.line = 520;
                add_patch_10550414(kxi_10600221, 3, current_10600220, before_10630031, HEX5BHEX5D_9820036(new_node_10600217, i_10630037), null);
                F.line = 80;
                res_12205312 = addInt(res_12205312, 1);
              }
          } while(false);
        } while(false);
      }
      
      L16: do {
        F.line = 522;
        var i_10630043 = 0;
        F.line = 77;
        var res_12205318 = pos_10630018;
        L17: do {
          F.line = 78;
            L18: while (true) {
            if (!(res_12205318 <= old_pos_10620214)) break L18;
              F.line = 522;
              i_10630043 = res_12205318;
              F.line = 523;
              add_patch_10550414(kxi_10187284[0], 4, null, null, null, HEX5BHEX5D_9820036(old_node_10600218, i_10630043));
              F.line = 525;
              add_patch_10550414(kxi_10600221, 1, current_10600220, current_10600220.childNodes[chckIndx(i_10630043, 0, (current_10600220.childNodes != null ? current_10600220.childNodes.length : 0)+0-1)-0], null, null);
              F.line = 80;
              res_12205318 = addInt(res_12205318, 1);
            }
        } while(false);
      } while(false);
      break;
    case 1:
      F.line = 527;
      add_patch_10550414(kxi_10187284[0], 4, null, null, null, old_node_10600218);
      F.line = 528;
      add_patch_10550414(kxi_10600221, 0, parent_10600219, current_10600220, new_node_10600217, null);
      break;
    case 4:
      if (true) {
      F.line = 529;
      failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(529, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);
  framePtr = F.prev;

  
}
function apply_components_10650429(kxi_10650431) {
            var Tmp3;

  var F={procname:"karax.applyComponents",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 537;
    var i_10650433 = 0;
    L1: do {
      F.line = 540;
        L2: while (true) {
        if (!(i_10650433 < (kxi_10650431.components != null ? kxi_10650431.components.length : 0))) break L2;
          F.line = 541;
          var x_10650439 = kxi_10650431.components[chckIndx(i_10650433, 0, (kxi_10650431.components != null ? kxi_10650431.components.length : 0)+0-1)-0].oldNode;
          F.line = 542;
          var new_node_10650440 = kxi_10650431.components[chckIndx(i_10650433, 0, (kxi_10650431.components != null ? kxi_10650431.components.length : 0)+0-1)-0].newNode;
            if (!!((x_10650439.changedImpl == null))) Tmp3 = false; else {              Tmp3 = x_10650439.changedImpl(x_10650439, new_node_10650440);            }          if (Tmp3) {
          F.line = 548;
          var current_10655201 = kxi_10650431.components[chckIndx(i_10650433, 0, (kxi_10650431.components != null ? kxi_10650431.components.length : 0)+0-1)-0].current;
          F.line = 549;
          var parent_10655202 = kxi_10650431.components[chckIndx(i_10650433, 0, (kxi_10650431.components != null ? kxi_10650431.components.length : 0)+0-1)-0].parent;
          F.line = 550;
          x_10650439.updatedImpl(x_10650439, new_node_10650440);
          F.line = 551;
          var old_expanded_10655203 = x_10650439.expanded;
          F.line = 552;
          x_10650439.expanded = x_10650439.renderImpl(x_10650439);
          F.line = 555;
          x_10650439.renderedVersion = x_10650439.version;
          if ((old_expanded_10655203 == null)) {
          F.line = 557;
          add_patch_10550414(kxi_10187284[0], 4, null, null, null, x_10650439);
          F.line = 558;
          add_patch_10550414(kxi_10650431, 0, parent_10655202, current_10655201, x_10650439.expanded, null);
          }
          else {
            F.line = 562;
            diff_10600215(x_10650439.expanded, old_expanded_10655203, parent_10655202, current_10655201, kxi_10650431);
          }
          
          }
          
          F.line = 577;
          i_10650433 = addInt(i_10650433, 1);
        }
    } while(false);
    F.line = 578;
    if (kxi_10650431.components === null) kxi_10650431.components = [];
               if (kxi_10650431.components.length < 0) { for (var i=kxi_10650431.components.length;i<0;++i) kxi_10650431.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_10650431.components.length = 0; };
  framePtr = F.prev;

  
}
function move_dom_10560047(dest_10560049, src_10560050) {
  var F={procname:"karax.moveDom",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 386;
    dest_10560049.dom = src_10560050.dom;
    F.line = 387;
    src_10560050.dom = null;
    if (!((dest_10560049.id == null))) {
    F.line = 389;
    kxi_10187284[0].byId[dest_10560049.id] = dest_10560049;
    }
    
    if (!((len_9820014(dest_10560049) == len_9820014(src_10560050)))) {
    F.line = 390;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(390, 10) `dest.len == src.len` "));
    }
    
    L1: do {
      F.line = 391;
      var i_10575208 = 0;
      F.line = 104;
      var colontmp__12205369 = 0;
      F.line = 391;
      colontmp__12205369 = len_9820014(dest_10560049);
      F.line = 106;
      var i_12205370 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_12205370 < colontmp__12205369)) break L3;
            F.line = 391;
            i_10575208 = i_12205370;
            F.line = 392;
            move_dom_10560047(HEX5BHEX5D_9820036(dest_10560049, i_10575208), HEX5BHEX5D_9820036(src_10560050, i_10575208));
            F.line = 109;
            i_12205370 = addInt(i_12205370, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function HEX5BHEX5DHEX3D_9820054(x_9820056, idx_9820057, y_9820058) {
  var F={procname:"vdom.[]=",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 252;
    x_9820056.kids[chckIndx(idx_9820057, 0, (x_9820056.kids != null ? x_9820056.kids.length : 0)+0-1)-0] = y_9820058;
  framePtr = F.prev;

  
}
function apply_patch_10575222(kxi_10575224) {
  var F={procname:"karax.applyPatch",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 395;
      var i_10575232 = 0;
      F.line = 106;
      var i_12205363 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_12205363 < kxi_10575224.patchLen)) break L3;
            F.line = 395;
            i_10575232 = i_12205363;
            F.line = 396;
            var p_10575233 = nimCopy(null, kxi_10575224.patches[chckIndx(i_10575232, 0, (kxi_10575224.patches != null ? kxi_10575224.patches.length : 0)+0-1)-0], NTI10187209);
            F.line = 397;
            switch (p_10575233.k) {
            case 0:
              F.line = 399;
              var nn_10575234 = to_dom_10300154(p_10575233.newNode, true, kxi_10575224);
              if ((p_10575233.parent == null)) {
              F.line = 401;
              replace_by_id_10465074(kxi_10575224.rootId, nn_10575234);
              }
              else {
                if ((p_10575233.current.parentNode == p_10575233.parent)) {
                F.line = 404;
                p_10575233.parent.replaceChild(nn_10575234, p_10575233.current);
                }
                else {
                  F.line = 406;
                p_10575233.parent.appendChild(nn_10575234);
                }
                
              }
              
              break;
            case 5:
              F.line = 408;
              move_dom_10560047(p_10575233.newNode, p_10575233.oldNode);
              break;
            case 1:
              F.line = 410;
              p_10575233.parent.removeChild(p_10575233.current);
              break;
            case 2:
              F.line = 412;
              var nn_10575250 = to_dom_10300154(p_10575233.newNode, true, kxi_10575224);
              F.line = 413;
              p_10575233.parent.appendChild(nn_10575250);
              break;
            case 3:
              F.line = 415;
              var nn_10575251 = to_dom_10300154(p_10575233.newNode, true, kxi_10575224);
              F.line = 416;
              p_10575233.parent.insertBefore(nn_10575251, p_10575233.current);
              break;
            case 4:
              F.line = 418;
              var n_10575252 = p_10575233.oldNode;
              if (!((n_10575252.id == null))) {
              F.line = 419;
              delete kxi_10575224.byId[n_10575252.id];
              }
              
              if ((n_10575252.kind == 5)) {
              F.line = 421;
              var x_10580018 = n_10575252;
              if (!((x_10580018.onDetachImpl == null))) {
              F.line = 422;
              x_10580018.onDetachImpl(x_10580018);
              }
              
              }
              
              if (!(kxi_10575224.surpressRedraws)) {
              F.line = 424;
              n_10575252.dom = null;
              }
              
              break;
            }
            F.line = 109;
            i_12205363 = addInt(i_12205363, 1);
          }
      } while(false);
    } while(false);
    F.line = 425;
    kxi_10575224.patchLen = 0;
    L4: do {
      F.line = 426;
      var i_10585013 = 0;
      F.line = 106;
      var i_12205366 = 0;
      L5: do {
        F.line = 107;
          L6: while (true) {
          if (!(i_12205366 < kxi_10575224.patchLenV)) break L6;
            F.line = 426;
            i_10585013 = i_12205366;
            F.line = 427;
            var p_10585014 = nimCopy(null, kxi_10575224.patchesV[chckIndx(i_10585013, 0, (kxi_10575224.patchesV != null ? kxi_10575224.patchesV.length : 0)+0-1)-0], NTI10187211);
            F.line = 428;
            HEX5BHEX5DHEX3D_9820054(p_10585014.parent, p_10585014.pos, p_10585014.newChild);
            if (!(!((p_10585014.newChild.dom == null)))) {
            F.line = 429;
            failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(429, 12) `p.newChild.dom != nil` "));
            }
            
            F.line = 109;
            i_12205366 = addInt(i_12205366, 1);
          }
      } while(false);
    } while(false);
    F.line = 430;
    kxi_10575224.patchLenV = 0;
  framePtr = F.prev;

  
}
function dodraw_10715262(kxi_10715264) {
  var F={procname:"karax.dodraw",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((kxi_10715264.renderer == null)) {
    F.line = 634;
    break BeforeRet;
    }
    
    F.line = 635;
    var rdata_10715269 = {hashPart: window.location.hash};
    F.line = 636;
    var newtree_10715270 = kxi_10715264.renderer(rdata_10715269);
    F.line = 637;
    kxi_10715264.runCount = addInt(kxi_10715264.runCount, 1);
    F.line = 638;
    newtree_10715270.id = kxi_10715264.rootId;
    F.line = 639;
    kxi_10715264.toFocus = null;
    if ((kxi_10715264.currentTree == null)) {
    F.line = 641;
    var asdom_10715285 = to_dom_10300154(newtree_10715270, true, kxi_10715264);
    F.line = 642;
    replace_by_id_10465074(kxi_10715264.rootId, asdom_10715285);
    }
    else {
      if (!(same_10450072(kxi_10715264.currentTree, document.getElementById(kxi_10715264.rootId), 0))) {
      F.line = 644;
      failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(644, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      F.line = 645;
      var olddom_10725201 = document.getElementById(kxi_10715264.rootId);
      F.line = 646;
      diff_10600215(newtree_10715270, kxi_10715264.currentTree, null, olddom_10725201, kxi_10715264);
    }
    
    F.line = 650;
    apply_components_10650429(kxi_10715264);
    F.line = 655;
    apply_patch_10575222(kxi_10715264);
    F.line = 656;
    kxi_10715264.currentTree = newtree_10715270;
    if (!(same_10450072(kxi_10715264.currentTree, document.getElementById(kxi_10715264.rootId), 0))) {
    F.line = 657;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.nimble\\pkgs\\karax-1.1.2\\karax\\karax.nim(657, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_10715264.postRenderCallback == null))) {
    F.line = 660;
    kxi_10715264.postRenderCallback(rdata_10715269);
    }
    
    if (!((kxi_10715264.toFocus == null))) {
    F.line = 664;
    kxi_10715264.toFocus.focus();
    }
    
    F.line = 665;
    kxi_10715264.renderId = 0;
  } while (false);
  framePtr = F.prev;

  
}
function init_10740646(ev_10740648) {
    function HEX3Aanonymous_10740649() {
      var F={procname:"init.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 690;
        dodraw_10715262(kxi_10187284[0]);
      framePtr = F.prev;

      
    }

  var F={procname:"karax.init",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 690;
    kxi_10187284[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_10740649);
  framePtr = F.prev;

  
}
function redraw_10740414(kxi_10740416) {
    function HEX3Aanonymous_10740601() {
      var F={procname:"redraw.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 683;
        dodraw_10715262(kxi_10740416);
      framePtr = F.prev;

      
    }

  var F={procname:"karax.redraw",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    if ((kxi_10740416.renderId == 0)) {
    F.line = 683;
    kxi_10740416.renderId = window.requestAnimationFrame(HEX3Aanonymous_10740601);
    }
    
  framePtr = F.prev;

  
}
function set_renderer_10740678(renderer_10740683, root_10740684, client_post_render_callback_10740688) {
    function HEX3Aanonymous_10745135() {
      var F={procname:"setRenderer.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 713;
        redraw_10740414(kxi_10187284[0]);
      framePtr = F.prev;

      
    }

  var result_10740689 = null;

  var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    if ((document.getElementById(root_10740684) == null)) {
    F.line = 699;
    var msg_10740695 = (("Could not find a <div> with id=" + root_10740684) + ". Karax needs it as its rendering target.");
    F.line = 701;
    raiseException({message: cstrToNimstr(msg_10740695), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
    }
    
    F.line = 703;
    result_10740689 = {rootId: root_10740684, renderer: renderer_10740683, postRenderCallback: client_post_render_callback_10740688, patches: new_seq_10745012(60), patchesV: new_seq_10745064(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
    F.line = 711;
    kxi_10187284[0] = result_10740689;
    F.line = 712;
    window.onload = init_10740646;
    F.line = 713;
    window.onhashchange = HEX3Aanonymous_10745135;
  framePtr = F.prev;

  return result_10740689;

}
function set_renderer_10745238(renderer_10745242, root_10745243, client_post_render_callback_10745246) {
    function wrap_renderer_10745248(data_10745250) {
      var result_10745251 = null;

      var F={procname:"setRenderer.wrapRenderer",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 718;
        result_10745251 = renderer_10745242();
      framePtr = F.prev;

      return result_10745251;

    }
    function wrap_post_render_10745265(data_10745267) {
      var F={procname:"setRenderer.wrapPostRender",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        if (!((client_post_render_callback_10745246 == null))) {
        F.line = 720;
        client_post_render_callback_10745246();
        }
        
      framePtr = F.prev;

      
    }

  var result_10745247 = null;

  var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 717;
    result_10745247 = set_renderer_10740678(wrap_renderer_10745248, root_10745243, wrap_post_render_10745265);
  framePtr = F.prev;

  return result_10745247;

}
function new_vnode_9830428(kind_9830430) {
  var result_9830431 = null;

  var F={procname:"vdom.newVNode",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 263;
    result_9830431 = {kind: kind_9830430, index: -1, m_type: NTI9735031, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};
  framePtr = F.prev;

  return result_9830431;

}
function add_9820072(parent_9820074, kid_9820075) {
  var F={procname:"vdom.add",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 257;
    if (parent_9820074.kids != null) { parent_9820074.kids.push(kid_9820075); } else { parent_9820074.kids = [kid_9820075]; };
  framePtr = F.prev;

  
}
function tree_9830445(kind_9830447, kids_9830449) {
  var result_9830450 = null;

  var F={procname:"vdom.tree",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 266;
    result_9830450 = new_vnode_9830428(kind_9830447);
    L1: do {
      F.line = 267;
      var k_9830481 = null;
      F.line = 3;
      var i_12205374 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_12205374 < (kids_9830449 != null ? kids_9830449.length : 0))) break L3;
            F.line = 267;
            k_9830481 = kids_9830449[chckIndx(i_12205374, 0, (kids_9830449 != null ? kids_9830449.length : 0)+0-1)-0];
            F.line = 267;
            add_9820072(result_9830450, k_9830481);
            F.line = 6;
            i_12205374 = addInt(i_12205374, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_9830450;

}
function text_9830548(s_9830550) {
  var result_9830551 = null;

  var F={procname:"vdom.text",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 275;
    result_9830551 = {kind: 0, text: toJSStr(s_9830550), index: -1, m_type: NTI9735031, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
  framePtr = F.prev;

  return result_9830551;

}
function add_event_listener_9835014(n_9835016, event_9835017, handler_9835018) {
  var F={procname:"vdom.addEventListener",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 299;
    if (n_9835016.events != null) { n_9835016.events.push({Field0: event_9835017, Field1: handler_9835018, Field2: null}); } else { n_9835016.events = [{Field0: event_9835017, Field1: handler_9835018, Field2: null}]; };
  framePtr = F.prev;

  
}
function add_event_handler_10750118(n_10750120, k_10750121, action_10750122, kxi_10750123) {
    function wrapper_10750124(ev_10750126, n_10750127) {
      var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 746;
        action_10750122(ev_10750126, n_10750127);
        if (!(kxi_10750123.surpressRedraws)) {
        F.line = 747;
        redraw_10740414(kxi_10750123);
        }
        
      framePtr = F.prev;

      
    }

  var F={procname:"karax.addEventHandler",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 748;
    add_event_listener_9835014(n_10750120, k_10750121, wrapper_10750124);
  framePtr = F.prev;

  
}
function render_textarea_12076041(on_key_up_proc_12076043) {
  var result_12076044 = null;

  var F={procname:"textarea.renderTextarea",prev:framePtr,filename:"textarea.nim",line:0};
  framePtr = F;
    F.line = 5;
    F.line = 6;
    var tmp_12076080 = tree_9830445(111, []);
    F.line = 6;
    add_event_handler_10750118(tmp_12076080, 3, on_key_up_proc_12076043, kxi_10187284[0]);
    result_12076044 = tmp_12076080;
  framePtr = F.prev;

  return result_12076044;

}
function render_counter_12081015(val_12081017, max_val_12081018) {
  var result_12081019 = null;

  var F={procname:"counter.renderCounter",prev:framePtr,filename:"counter.nim",line:0};
  framePtr = F;
    F.line = 5;
    F.line = 5;
    var tmp_12081021 = tree_9830445(43, []);
    F.line = 6;
    var tmp_12081022 = tree_9830445(70, []);
    F.line = 6;
    add_9820072(tmp_12081022, text_9830548((cstrToNimstr((val_12081017)+"") || []).concat(makeNimstrLit("/") || [],cstrToNimstr((max_val_12081018)+"") || [])));
    F.line = 6;
    add_9820072(tmp_12081021, tmp_12081022);
    result_12081019 = tmp_12081021;
  framePtr = F.prev;

  return result_12081019;

}
function set_attr_9770105(n_9770107, key_9770108, val_9770109) {
  var F={procname:"vdom.setAttr",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((n_9770107.attrs != null ? n_9770107.attrs.length : 0) == 0)) {
    F.line = 220;
    n_9770107.attrs = nimCopy(null, [key_9770108, val_9770109], NTI9770125);
    }
    else {
      L1: do {
        F.line = 222;
        var i_9770138 = 0;
        F.line = 39;
        var colontmp__12205384 = 0;
        F.line = 222;
        colontmp__12205384 = subInt((n_9770107.attrs != null ? n_9770107.attrs.length : 0), 2);
        F.line = 56;
        var res_12205385 = 0;
        L2: do {
          F.line = 57;
            L3: while (true) {
            if (!(res_12205385 <= colontmp__12205384)) break L3;
              F.line = 222;
              i_9770138 = res_12205385;
              if ((n_9770107.attrs[chckIndx(i_9770138, 0, (n_9770107.attrs != null ? n_9770107.attrs.length : 0)+0-1)-0] == key_9770108)) {
              F.line = 224;
              n_9770107.attrs[chckIndx(addInt(i_9770138, 1), 0, (n_9770107.attrs != null ? n_9770107.attrs.length : 0)+0-1)-0] = val_9770109;
              F.line = 225;
              break BeforeRet;
              }
              
              F.line = 59;
              res_12205385 = addInt(res_12205385, 2);
            }
        } while(false);
      } while(false);
      F.line = 226;
      if (n_9770107.attrs != null) { n_9770107.attrs.push(key_9770108); } else { n_9770107.attrs = [key_9770108]; };
      F.line = 227;
      if (n_9770107.attrs != null) { n_9770107.attrs.push(val_9770109); } else { n_9770107.attrs = [val_9770109]; };
    }
    
  } while (false);
  framePtr = F.prev;

  
}
function to_disabled_10755039(disabled_10755041) {
    var Tmp1;

  var result_10755042 = null;

  var F={procname:"karax.toDisabled",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 816;
    if (disabled_10755041) {
    Tmp1 = "disabled";
    }
    else {
    Tmp1 = null;
    }
    
    result_10755042 = Tmp1;
  framePtr = F.prev;

  return result_10755042;

}
function add_event_handler_10750154(n_10750156, k_10750157, action_10750160, kxi_10750161) {
    function wrapper_10750162(ev_10750164, n_10750165) {
      var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 758;
        action_10750160();
        if (!(kxi_10750161.surpressRedraws)) {
        F.line = 759;
        redraw_10740414(kxi_10750161);
        }
        
      framePtr = F.prev;

      
    }

  var F={procname:"karax.addEventHandler",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 760;
    add_event_listener_9835014(n_10750156, k_10750157, wrapper_10750162);
  framePtr = F.prev;

  
}
function render_button_12086028(caption_12086030, disabled_12086031, on_click_proc_12090004) {
  var result_12090005 = null;

  var F={procname:"button.renderButton",prev:framePtr,filename:"button.nim",line:0};
  framePtr = F;
    F.line = 7;
    F.line = 8;
    var tmp_12090006 = tree_9830445(106, []);
    F.line = 8;
    set_attr_9770105(tmp_12090006, "disabled", to_disabled_10755039(disabled_12086031));
    F.line = 8;
    add_event_handler_10750154(tmp_12090006, 0, on_click_proc_12090004, kxi_10187284[0]);
    F.line = 9;
    add_9820072(tmp_12090006, text_9830548(caption_12086030));
    result_12090005 = tmp_12090006;
  framePtr = F.prev;

  return result_12090005;

}
function contains_12110020(s_12110026, value_12110027) {
  var result_12110028 = false;

  var F={procname:"contains.contains",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 766;
    result_12110028 = ((s_12110026.a <= value_12110027) && (value_12110027 <= s_12110026.b));
  framePtr = F.prev;

  return result_12110028;

}
function HEX2EHEX2E_2065220(a_2065225, b_2065227) {
  var result_2065229 = ({a: 0, b: 0});

  var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 469;
    nimCopy(result_2065229, {a: a_2065225, b: b_2065227}, NTI1186907);
  framePtr = F.prev;

  return result_2065229;

}
function render_12096047(tweet_box_12096050) {
    function HEX3Aanonymous_12105001(event_12105003, node_12105004) {
      var F={procname:"render.:anonymous",prev:framePtr,filename:"tweetbox.nim",line:0};
      framePtr = F;
        F.line = 21;
        tweet_box_12096050.tweetText = value_9735126(node_12105004);
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_12115001() {
      var F={procname:"render.:anonymous",prev:framePtr,filename:"tweetbox.nim",line:0};
      framePtr = F;
        F.line = 28;
        rawEcho(cstrToNimstr(("Send tweet: " + tweet_box_12096050.tweetText)));
      framePtr = F.prev;

      
    }

  var result_12096051 = null;

  var F={procname:"tweetbox.render",prev:framePtr,filename:"tweetbox.nim",line:0};
  framePtr = F;
    F.line = 20;
    F.line = 20;
    var tmp_12096052 = tree_9830445(43, []);
    F.line = 21;
    add_9820072(tmp_12096052, render_textarea_12076041(HEX3Aanonymous_12105001));
    F.line = 23;
    add_9820072(tmp_12096052, render_counter_12081015((tweet_box_12096050.tweetText != null ? tweet_box_12096050.tweetText.length : 0), 10));
    F.line = 28;
    add_9820072(tmp_12096052, render_button_12086028(makeNimstrLit("Submit"), !(contains_12110020(HEX2EHEX2E_2065220(1, 10), (tweet_box_12096050.tweetText != null ? tweet_box_12096050.tweetText.length : 0))), HEX3Aanonymous_12115001));
    result_12096051 = tmp_12096052;
  framePtr = F.prev;

  return result_12096051;

}
function text_9830601(s_9830603) {
  var result_9830604 = null;

  var F={procname:"vdom.text",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 276;
    result_9830604 = {kind: 0, text: s_9830603, index: -1, m_type: NTI9735031, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
  framePtr = F.prev;

  return result_9830604;

}
function ajax_11990092(meth_11990094, url_11990095, headers_11990098, data_11990099, cont_11990104, do_redraw_11990105, kxi_11990106, use_binary_11990107, blob_11990108) {
function cont_wrapper_11990109(http_status_11990111, response_11990112) {
  var F={procname:"ajax.contWrapper",prev:framePtr,filename:"kajax.nim",line:0};
  framePtr = F;
    F.line = 76;
    cont_11990104(http_status_11990111, response_11990112);
    if (do_redraw_11990105) {
    F.line = 77;
    redraw_10740414(kxi_11990106);
    }
    
  framePtr = F.prev;

  
}
    function HEX3Aanonymous_11990135() {
      var F={procname:"ajax.:anonymous",prev:framePtr,filename:"kajax.nim",line:0};
      framePtr = F;
        if ((this.readyState == 4)) {
        if ((this.status == 200)) {
        F.line = 88;
        cont_wrapper_11990109(this.status, this.responseText);
        }
        else {
          F.line = 90;
        cont_wrapper_11990109(this.status, this.responseText);
        }
        
        }
        
      framePtr = F.prev;

      
    }

  var F={procname:"kajax.ajax",prev:framePtr,filename:"kajax.nim",line:0};
  framePtr = F;
    F.line = 81;
    var ajax_11990127 = new XMLHttpRequest();
    F.line = 82;
    ajax_11990127.open(meth_11990094, url_11990095, true);
    L1: do {
      F.line = 83;
      var a_11990133 = null;
      F.line = 83;
      var b_11990134 = null;
      F.line = 3;
      var i_12205397 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_12205397 < (headers_11990098 != null ? headers_11990098.length : 0))) break L3;
            F.line = 83;
            a_11990133 = headers_11990098[chckIndx(i_12205397, 0, (headers_11990098 != null ? headers_11990098.length : 0)+0-1)-0]["Field0"];
            F.line = 5;
            b_11990134 = headers_11990098[chckIndx(i_12205397, 0, (headers_11990098 != null ? headers_11990098.length : 0)+0-1)-0]["Field1"];
            F.line = 84;
            ajax_11990127.setRequestHeader(a_11990133, b_11990134);
            F.line = 6;
            i_12205397 = addInt(i_12205397, 1);
          }
      } while(false);
    } while(false);
    F.line = 85;
    ajax_11990127.onreadystatechange = HEX3Aanonymous_11990135;
    if (use_binary_11990107) {
    F.line = 92;
    ajax_11990127.send(blob_11990108);
    }
    else {
      F.line = 94;
    ajax_11990127.send(data_11990099);
    }
    
  framePtr = F.prev;

  
}
function ajax_get_11990219(url_11990221, headers_11990224, cont_11990229, do_redraw_11990230, kxi_11990231) {
  var F={procname:"kajax.ajaxGet",prev:framePtr,filename:"kajax.nim",line:0};
  framePtr = F;
    F.line = 114;
    ajax_11990092("GET", url_11990221, headers_11990224, null, cont_11990229, do_redraw_11990230, kxi_11990231, false, null);
  framePtr = F.prev;

  
}
function get_var_type_11725050(x_11725052) {
  var result_11725053 = 0;

  var F={procname:"json.getVarType",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 860;
    result_11725053 = 0;
    F.line = 863;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_11725052)))) {
    case "[object Array]":
      F.line = 864;
      result_11725053 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      F.line = 865;
      result_11725053 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
      if ((x_11725052 % 1.0000000000000000e+000 == 0.0)) {
      F.line = 868;
      result_11725053 = 2;
      break BeforeRet;
      }
      else {
        F.line = 870;
        result_11725053 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      F.line = 871;
      result_11725053 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      F.line = 872;
      result_11725053 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      F.line = 873;
      result_11725053 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      F.line = 874;
      failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.choosenim\\toolchains\\nim-1.2.6\\lib\\pure\\json.nim(874, 18) `false` "));
      }
      
      break;
    }
  } while (false);
  framePtr = F.prev;

  return result_11725053;

}
function new_jarray_11270657() {
  var result_11270659 = null;

  var F={procname:"json.newJArray",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 214;
    result_11270659 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: ({data: null, counter: 0, first: 0, last: 0})};
  framePtr = F.prev;

  return result_11270659;

}
function len_11735214(x_11735216) {
  var result_11735217 = 0;

  var F={procname:"json.len",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!((get_var_type_11725050(x_11735216) == 6))) {
    F.line = 877;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.choosenim\\toolchains\\nim-1.2.6\\lib\\pure\\json.nim(877, 12) `x.getVarType == JArray` "));
    }
    
    F.line = 878;
          result_11735217 = x_11735216.length;
    
  framePtr = F.prev;

  return result_11735217;

}
function add_11300020(father_11300022, child_11300023) {
    var Tmp1;
    var Tmp2;

  var F={procname:"json.add",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!((father_11300022.kind == 6))) {
    F.line = 272;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.choosenim\\toolchains\\nim-1.2.6\\lib\\pure\\json.nim(272, 10) `father.kind == JArray` "));
    }
    
    F.line = 273;
    var Tmp1 = father_11300022;
    if (ConstSet2[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_11300023); } else { Tmp2 = [child_11300023]; };
  framePtr = F.prev;

  
}
function HEX5BHEX5D_11755214(x_11755216, y_11755217) {
  var result_11755218 = ({});

  var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!((get_var_type_11725050(x_11755216) == 6))) {
    F.line = 889;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.choosenim\\toolchains\\nim-1.2.6\\lib\\pure\\json.nim(889, 12) `x.getVarType == JArray` "));
    }
    
    F.line = 890;
          result_11755218 = x_11755216[y_11755217];
    
  framePtr = F.prev;

  return result_11755218;

}
function is_power_of_two_1140029(x_1140031) {
    var Tmp1;

  var result_1140032 = false;

  BeforeRet: do {
    if (!(0 < x_1140031)) Tmp1 = false; else {      Tmp1 = ((x_1140031 & (x_1140031 - 1)) == 0);    }    result_1140032 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1140032;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI6253, name: null, trace: null, up: null}, "RangeError");

  
}
function init_ordered_table_11251240(initial_size_11251244) {
  var result_11251246 = ({data: null, counter: 0, first: 0, last: 0});

  var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (!(is_power_of_two_1140029(initial_size_11251244))) {
    F.line = 166;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.choosenim\\toolchains\\nim-1.2.6\\lib\\pure\\collections\\tableimpl.nim(166, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    F.line = 167;
    result_11251246.counter = 0;
    F.line = 168;
    result_11251246.data = new Array(chckRange(initial_size_11251244, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_11251244, 0, 2147483647);++i) {result_11251246.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    F.line = 170;
    result_11251246.first = -1;
    F.line = 171;
    result_11251246.last = -1;
  framePtr = F.prev;

  return result_11251246;

}
function new_jobject_11251235() {
  var result_11251237 = null;

  var F={procname:"json.newJObject",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 210;
    result_11251237 = {kind: 5, fields: init_ordered_table_11251240(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
  framePtr = F.prev;

  return result_11251237;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI6235, name: null, trace: null, up: null}, "DivByZeroError");

  
}
function imul_9905517(a_9905519, b_9905520) {
  var result_9905521 = 0;

  var F={procname:"hashes.imul",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 133;
    var mask_9905522 = 65535;
    F.line = 135;
    var a_hi_9905531 = (((a_9905519 >>> 0) >>> 16) & mask_9905522);
    F.line = 136;
    var a_lo_9905532 = (a_9905519 & mask_9905522);
    F.line = 137;
    var b_hi_9905541 = (((b_9905520 >>> 0) >>> 16) & mask_9905522);
    F.line = 138;
    var b_lo_9905542 = (b_9905520 & mask_9905522);
    F.line = 139;
    result_9905521 = ((((a_lo_9905532 * b_lo_9905542) >>> 0) + (((((a_hi_9905531 * b_lo_9905542) >>> 0) + ((a_lo_9905532 * b_hi_9905541) >>> 0)) >>> 0) << 16)) >>> 0);
  framePtr = F.prev;

  return result_9905521;

}
function rotl32_9905601(x_9905603, r_9905604) {
  var result_9905605 = 0;

  var F={procname:"hashes.rotl32",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 144;
    result_9905605 = ((x_9905603 << r_9905604) | ((x_9905603 >>> 0) >>> subInt(32, r_9905604)));
  framePtr = F.prev;

  return result_9905605;

}
function murmur_hash_9905629(x_9905632) {
  var result_9905633 = 0;

  var F={procname:"hashes.murmurHash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 155;
    var size_9905643 = (x_9905632 != null ? x_9905632.length : 0);
    F.line = 156;
    var step_size_9905645 = 4;
    F.line = 157;
    var n_9905646 = divInt(size_9905643, step_size_9905645);
    F.line = 159;
    var h1_9905647 = 0;
    F.line = 160;
    var i_9905649 = 0;
    L1: do {
      F.line = 163;
        L2: while (true) {
        if (!(i_9905649 < mulInt(n_9905646, step_size_9905645))) break L2;
          F.line = 164;
          var k1_9905650 = 0;
          F.line = 166;
          var j_9905651 = step_size_9905645;
          L3: do {
            F.line = 167;
              L4: while (true) {
              if (!(0 < j_9905651)) break L4;
                F.line = 168;
                j_9905651 = subInt(j_9905651, 1);
                F.line = 169;
                k1_9905650 = ((k1_9905650 << 8) | x_9905632[chckIndx(addInt(i_9905649, j_9905651), 0, (x_9905632 != null ? x_9905632.length : 0)+0-1)-0]);
              }
          } while(false);
          F.line = 172;
          i_9905649 = addInt(i_9905649, step_size_9905645);
          F.line = 174;
          k1_9905650 = imul_9905517(k1_9905650, 3432918353);
          F.line = 175;
          k1_9905650 = rotl32_9905601(k1_9905650, 15);
          F.line = 176;
          k1_9905650 = imul_9905517(k1_9905650, 461845907);
          F.line = 178;
          h1_9905647 = (h1_9905647 ^ k1_9905650);
          F.line = 179;
          h1_9905647 = rotl32_9905601(h1_9905647, 13);
          F.line = 180;
          h1_9905647 = ((((h1_9905647 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while(false);
    F.line = 183;
    var k1_9910207 = 0;
    F.line = 184;
    var rem_9910208 = modInt(size_9905643, step_size_9905645);
    L5: do {
      F.line = 185;
        L6: while (true) {
        if (!(0 < rem_9910208)) break L6;
          F.line = 186;
          rem_9910208 = subInt(rem_9910208, 1);
          F.line = 187;
          k1_9910207 = ((k1_9910207 << 8) | x_9905632[chckIndx(addInt(i_9905649, rem_9910208), 0, (x_9905632 != null ? x_9905632.length : 0)+0-1)-0]);
        }
    } while(false);
    F.line = 188;
    k1_9910207 = imul_9905517(k1_9910207, 3432918353);
    F.line = 189;
    k1_9910207 = rotl32_9905601(k1_9910207, 15);
    F.line = 190;
    k1_9910207 = imul_9905517(k1_9910207, 461845907);
    F.line = 191;
    h1_9905647 = (h1_9905647 ^ k1_9910207);
    F.line = 194;
    h1_9905647 = (h1_9905647 ^ size_9905643);
    F.line = 195;
    h1_9905647 = (h1_9905647 ^ ((h1_9905647 >>> 0) >>> 16));
    F.line = 196;
    h1_9905647 = imul_9905517(h1_9905647, 2246822507);
    F.line = 197;
    h1_9905647 = (h1_9905647 ^ ((h1_9905647 >>> 0) >>> 13));
    F.line = 198;
    h1_9905647 = imul_9905517(h1_9905647, 3266489909);
    F.line = 199;
    h1_9905647 = (h1_9905647 ^ ((h1_9905647 >>> 0) >>> 16));
    F.line = 200;
    result_9905633 = (h1_9905647|0);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_9905633;

}
function hash_9945214(x_9945216) {
  var result_9945217 = 0;

  var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 229;
    result_9945217 = murmur_hash_9905629((x_9945216.slice(0, (x_9945216 != null ? (x_9945216.length-1) : -1)+1)));
  framePtr = F.prev;

  return result_9945217;

}
function is_filled_9967018(hcode_9967020) {
  var result_9967021 = false;

  var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 27;
    result_9967021 = !((hcode_9967020 == 0));
  framePtr = F.prev;

  return result_9967021;

}
function next_try_9970014(h_9970016, max_hash_9970017) {
  var result_9970018 = 0;

  var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 30;
    result_9970018 = (addInt(h_9970016, 1) & max_hash_9970017);
  framePtr = F.prev;

  return result_9970018;

}
function raw_get_11345621(t_11345626, key_11345627, hc_11345628, hc_11345628_Idx) {
            var Tmp3;

  var result_11345629 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_11345628[hc_11345628_Idx] = hash_9945214(key_11345627);
    if ((hc_11345628[hc_11345628_Idx] == 0)) {
    F.line = 65;
    hc_11345628[hc_11345628_Idx] = 314159265;
    }
    
    if (((t_11345626.data != null ? t_11345626.data.length : 0) == 0)) {
    F.line = 47;
    result_11345629 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_11355138 = (hc_11345628[hc_11345628_Idx] & (t_11345626.data != null ? (t_11345626.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9967018(t_11345626.data[chckIndx(h_11355138, 0, (t_11345626.data != null ? t_11345626.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_11345626.data[chckIndx(h_11355138, 0, (t_11345626.data != null ? t_11345626.data.length : 0)+0-1)-0].Field0 == hc_11345628[hc_11345628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_11345626.data[chckIndx(h_11355138, 0, (t_11345626.data != null ? t_11345626.data.length : 0)+0-1)-0].Field2, key_11345627);            }          if (Tmp3) {
          F.line = 55;
          result_11345629 = h_11355138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_11355138 = next_try_9970014(h_11355138, (t_11345626.data != null ? (t_11345626.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_11345629 = subInt(-1, h_11355138);
  } while (false);
  framePtr = F.prev;

  return result_11345629;

}
function must_rehash_11380601(t_11380604) {
  var result_11380605 = false;

  var F={procname:"mustRehash.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    if (!((t_11380604.counter < (t_11380604.data != null ? t_11380604.data.length : 0)))) {
    F.line = 33;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.choosenim\\toolchains\\nim-1.2.6\\lib\\pure\\collections\\hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 34;
    result_11380605 = ((mulInt((t_11380604.data != null ? t_11380604.data.length : 0), 2) < mulInt(t_11380604.counter, 3)) || (subInt((t_11380604.data != null ? t_11380604.data.length : 0), t_11380604.counter) < 4));
  framePtr = F.prev;

  return result_11380605;

}
function raw_insert_11406349(t_11406355, data_11406358, data_11406358_Idx, key_11406359, val_11406360, hc_11406361, h_11406362) {
  var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 22;
    data_11406358[data_11406358_Idx][chckIndx(h_11406362, 0, (data_11406358[data_11406358_Idx] != null ? data_11406358[data_11406358_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, key_11406359, NTI112);
    F.line = 23;
    data_11406358[data_11406358_Idx][chckIndx(h_11406362, 0, (data_11406358[data_11406358_Idx] != null ? data_11406358[data_11406358_Idx].length : 0)+0-1)-0].Field3 = val_11406360;
    F.line = 24;
    data_11406358[data_11406358_Idx][chckIndx(h_11406362, 0, (data_11406358[data_11406358_Idx] != null ? data_11406358[data_11406358_Idx].length : 0)+0-1)-0].Field0 = hc_11406361;
    F.line = 1231;
    data_11406358[data_11406358_Idx][chckIndx(h_11406362, 0, (data_11406358[data_11406358_Idx] != null ? data_11406358[data_11406358_Idx].length : 0)+0-1)-0].Field1 = -1;
    if ((t_11406355.first < 0)) {
    F.line = 1232;
    t_11406355.first = h_11406362;
    }
    
    if ((0 <= t_11406355.last)) {
    F.line = 1233;
    data_11406358[data_11406358_Idx][chckIndx(t_11406355.last, 0, (data_11406358[data_11406358_Idx] != null ? data_11406358[data_11406358_Idx].length : 0)+0-1)-0].Field1 = h_11406362;
    }
    
    F.line = 1234;
    t_11406355.last = h_11406362;
  framePtr = F.prev;

  
}
function enlarge_11405180(t_11405186) {
          var Tmp6;
          var Tmp7;

  var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 1237;
    var n_11405194 = null;
    F.line = 1238;
    n_11405194 = new Array(chckRange(mulInt((t_11405186.data != null ? t_11405186.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_11405186.data != null ? t_11405186.data.length : 0), 2), 0, 2147483647);++i) {n_11405194[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    F.line = 1239;
    var h_11405333 = t_11405186.first;
    F.line = 1240;
    t_11405186.first = -1;
    F.line = 1241;
    t_11405186.last = -1;
    F.line = 1242;
    var Tmp1 = t_11405186.data; t_11405186.data = n_11405194; n_11405194 = Tmp1;    L2: do {
      F.line = 1243;
        L3: while (true) {
        if (!(0 <= h_11405333)) break L3;
          F.line = 1244;
          var nxt_11405489 = n_11405194[chckIndx(h_11405333, 0, (n_11405194 != null ? n_11405194.length : 0)+0-1)-0].Field1;
          F.line = 1245;
          var eh_11405638 = n_11405194[chckIndx(h_11405333, 0, (n_11405194 != null ? n_11405194.length : 0)+0-1)-0].Field0;
          if (is_filled_9967018(eh_11405638)) {
          F.line = 1247;
          var j_11405645 = (eh_11405638 & (t_11405186.data != null ? (t_11405186.data.length-1) : -1));
          L4: do {
            F.line = 1248;
              L5: while (true) {
              if (!is_filled_9967018(t_11405186.data[chckIndx(j_11405645, 0, (t_11405186.data != null ? t_11405186.data.length : 0)+0-1)-0].Field0)) break L5;
                F.line = 1249;
                j_11405645 = next_try_9970014(j_11405645, (t_11405186.data != null ? (t_11405186.data.length-1) : -1));
              }
          } while(false);
          F.line = 1250;
          Tmp6 = n_11405194[chckIndx(h_11405333, 0, (n_11405194 != null ? n_11405194.length : 0)+0-1)-0].Field2;
          n_11405194[chckIndx(h_11405333, 0, (n_11405194 != null ? n_11405194.length : 0)+0-1)-0].Field2 = genericReset(n_11405194[chckIndx(h_11405333, 0, (n_11405194 != null ? n_11405194.length : 0)+0-1)-0].Field2, NTI112);
          Tmp7 = n_11405194[chckIndx(h_11405333, 0, (n_11405194 != null ? n_11405194.length : 0)+0-1)-0].Field3;
          n_11405194[chckIndx(h_11405333, 0, (n_11405194 != null ? n_11405194.length : 0)+0-1)-0].Field3 = genericReset(n_11405194[chckIndx(h_11405333, 0, (n_11405194 != null ? n_11405194.length : 0)+0-1)-0].Field3, NTI11251043);
          raw_insert_11406349(t_11405186, t_11405186, "data", Tmp6, Tmp7, n_11405194[chckIndx(h_11405333, 0, (n_11405194 != null ? n_11405194.length : 0)+0-1)-0].Field0, j_11405645);
          }
          
          F.line = 1251;
          h_11405333 = nxt_11405489;
        }
    } while(false);
  framePtr = F.prev;

  
}
function raw_get_known_hc_11407149(t_11407154, key_11407155, hc_11407156) {
  var result_11407157 = 0;

  var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((t_11407154.data != null ? t_11407154.data.length : 0) == 0)) {
    F.line = 47;
    result_11407157 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_11410138 = (hc_11407156 & (t_11407154.data != null ? (t_11407154.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9967018(t_11407154.data[chckIndx(h_11410138, 0, (t_11407154.data != null ? t_11407154.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_11407154.data[chckIndx(h_11410138, 0, (t_11407154.data != null ? t_11407154.data.length : 0)+0-1)-0].Field0 == hc_11407156) && eqStrings(t_11407154.data[chckIndx(h_11410138, 0, (t_11407154.data != null ? t_11407154.data.length : 0)+0-1)-0].Field2, key_11407155))) {
          F.line = 55;
          result_11407157 = h_11410138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_11410138 = next_try_9970014(h_11410138, (t_11407154.data != null ? (t_11407154.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_11407157 = subInt(-1, h_11410138);
  } while (false);
  framePtr = F.prev;

  return result_11407157;

}
function HEX5BHEX5DHEX3D_11320311(t_11320317, key_11320318, val_11320319) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (((t_11320317.data != null ? t_11320317.data.length : 0) == 0)) {
    if (!(is_power_of_two_1140029(64))) {
    F.line = 166;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.choosenim\\toolchains\\nim-1.2.6\\lib\\pure\\collections\\tableimpl.nim(166, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 167;
    t_11320317.counter = 0;
    F.line = 168;
    t_11320317.data = new Array(64); for (var i=0;i<64;++i) {t_11320317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    F.line = 170;
    t_11320317.first = -1;
    F.line = 171;
    t_11320317.last = -1;
    }
    
    F.line = 57;
    var hc_11345601 = [0];
    F.line = 58;
    var index_11355620 = raw_get_11345621(t_11320317, key_11320318, hc_11345601, 0);
    if ((0 <= index_11355620)) {
    F.line = 59;
    t_11320317.data[chckIndx(index_11355620, 0, (t_11320317.data != null ? t_11320317.data.length : 0)+0-1)-0].Field3 = val_11320319;
    }
    else {
      if (((t_11320317.data != null ? t_11320317.data.length : 0) == 0)) {
      if (!(is_power_of_two_1140029(64))) {
      F.line = 166;
      failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.choosenim\\toolchains\\nim-1.2.6\\lib\\pure\\collections\\tableimpl.nim(166, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      F.line = 167;
      t_11320317.counter = 0;
      F.line = 168;
      t_11320317.data = new Array(64); for (var i=0;i<64;++i) {t_11320317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}      F.line = 170;
      t_11320317.first = -1;
      F.line = 171;
      t_11320317.last = -1;
      }
      
      if (must_rehash_11380601(t_11320317)) {
      F.line = 49;
      enlarge_11405180(t_11320317);
      F.line = 50;
      index_11355620 = raw_get_known_hc_11407149(t_11320317, key_11320318, hc_11345601[0]);
      }
      
      F.line = 51;
      index_11355620 = subInt(-1, index_11355620);
      F.line = 52;
      raw_insert_11406349(t_11320317, t_11320317, "data", key_11320318, val_11320319, hc_11345601[0], index_11355620);
      F.line = 60;
      t_11320317.counter = addInt(t_11320317.counter, 1);
    }
    
  framePtr = F.prev;

  
}
function HEX5BHEX5DHEX3D_11411214(obj_11411216, key_11411217, val_11411218) {
    var Tmp1;

  var F={procname:"json.[]=",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!((obj_11411216.kind == 5))) {
    F.line = 346;
    failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.choosenim\\toolchains\\nim-1.2.6\\lib\\pure\\json.nim(346, 9) `obj.kind == JObject` "));
    }
    
    F.line = 347;
    var Tmp1 = obj_11411216;
    if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    HEX5BHEX5DHEX3D_11320311(Tmp1.fields, key_11411217, val_11411218);
  framePtr = F.prev;

  
}
function new_jint_11251168(n_11251170) {
  var result_11251171 = null;

  var F={procname:"json.newJInt",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 194;
    result_11251171 = {kind: 2, num: n_11251170, str: null, fnum: 0.0, bval: false, fields: ({data: null, counter: 0, first: 0, last: 0}), elems: null};
  framePtr = F.prev;

  return result_11251171;

}
function new_jfloat_11251185(n_11251187) {
  var result_11251188 = null;

  var F={procname:"json.newJFloat",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 198;
    result_11251188 = {kind: 3, fnum: n_11251187, str: null, num: 0, bval: false, fields: ({data: null, counter: 0, first: 0, last: 0}), elems: null};
  framePtr = F.prev;

  return result_11251188;

}
function new_jstring_11251086(s_11251088) {
  var result_11251089 = null;

  var F={procname:"json.newJString",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 186;
    result_11251089 = {kind: 4, str: nimCopy(null, s_11251088, NTI112), num: 0, fnum: 0.0, bval: false, fields: ({data: null, counter: 0, first: 0, last: 0}), elems: null};
  framePtr = F.prev;

  return result_11251089;

}
function new_jbool_11251202(b_11251204) {
  var result_11251205 = null;

  var F={procname:"json.newJBool",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 202;
    result_11251205 = {kind: 1, bval: b_11251204, str: null, num: 0, fnum: 0.0, fields: ({data: null, counter: 0, first: 0, last: 0}), elems: null};
  framePtr = F.prev;

  return result_11251205;

}
function new_jnull_11251219() {
  var result_11251221 = null;

  var F={procname:"json.newJNull",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 206;
    result_11251221 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: ({data: null, counter: 0, first: 0, last: 0}), elems: null};
  framePtr = F.prev;

  return result_11251221;

}
function convert_object_11765214(x_11765216) {
  var result_11765217 = null;

  var F={procname:"json.convertObject",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 895;
    switch (get_var_type_11725050(x_11765216)) {
    case 6:
      F.line = 897;
      result_11765217 = new_jarray_11270657();
      L1: do {
        F.line = 898;
        var i_11765225 = 0;
        F.line = 104;
        var colontmp__12205401 = 0;
        F.line = 898;
        colontmp__12205401 = len_11735214(x_11765216);
        F.line = 106;
        var i_12205402 = 0;
        L2: do {
          F.line = 107;
            L3: while (true) {
            if (!(i_12205402 < colontmp__12205401)) break L3;
              F.line = 898;
              i_11765225 = i_12205402;
              F.line = 899;
              add_11300020(result_11765217, convert_object_11765214(HEX5BHEX5D_11755214(x_11765216, i_11765225)));
              F.line = 109;
              i_12205402 = addInt(i_12205402, 1);
            }
        } while(false);
      } while(false);
      break;
    case 5:
      F.line = 901;
      result_11765217 = new_jobject_11251235();
      F.line = 902;
      for (var property in x_11765216) {
        if (x_11765216.hasOwnProperty(property)) {
      
      F.line = 905;
      var nim_property_11765227 = null;
      F.line = 906;
      var nim_value_11765228 = ({});
      F.line = 907;
      nim_property_11765227 = property; nim_value_11765228 = x_11765216[property];
      F.line = 908;
      HEX5BHEX5DHEX3D_11411214(result_11765217, cstrToNimstr(nim_property_11765227), convert_object_11765214(nim_value_11765228));
      F.line = 909;
      }}
      break;
    case 2:
      F.line = 911;
      result_11765217 = new_jint_11251168(x_11765216);
      break;
    case 3:
      F.line = 913;
      result_11765217 = new_jfloat_11251185(x_11765216);
      break;
    case 4:
      F.line = 915;
      result_11765217 = new_jstring_11251086(cstrToNimstr(x_11765216));
      break;
    case 1:
      F.line = 917;
      result_11765217 = new_jbool_11251202(x_11765216);
      break;
    case 0:
      F.line = 919;
      result_11765217 = new_jnull_11251219();
      break;
    }
  framePtr = F.prev;

  return result_11765217;

}
function parse_json_11765257(buffer_11765259) {
  var result_11765260 = null;

  var F={procname:"json.parseJson",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 925;
    result_11765260 = convert_object_11765214(JSON.parse(toJSStr(buffer_11765259)));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11765260;

}
function HEX3DHEX3D_11425020(x_11425024, y_11425026) {
  var result_11425027 = false;

  var F={procname:"==.==",prev:framePtr,filename:"comparisons.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 301;
    var same_object_11425601 = false;
    F.line = 302;
    same_object_11425601 = x_11425024 === y_11425026
    if (same_object_11425601) {
    F.line = 303;
    result_11425027 = true;
    break BeforeRet;
    }
    
    if (!(((x_11425024 != null ? x_11425024.length : 0) == (y_11425026 != null ? y_11425026.length : 0)))) {
    F.line = 310;
    result_11425027 = false;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 312;
      var i_11426024 = 0;
      F.line = 66;
      var colontmp__12205438 = 0;
      F.line = 312;
      colontmp__12205438 = subInt((x_11425024 != null ? x_11425024.length : 0), 1);
      F.line = 77;
      var res_12205439 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_12205439 <= colontmp__12205438)) break L3;
            F.line = 312;
            i_11426024 = res_12205439;
            if (!(HEX3DHEX3D_11420491(x_11425024[chckIndx(i_11426024, 0, (x_11425024 != null ? x_11425024.length : 0)+0-1)-0], y_11425026[chckIndx(i_11426024, 0, (y_11425026 != null ? y_11425026.length : 0)+0-1)-0]))) {
            F.line = 314;
            result_11425027 = false;
            break BeforeRet;
            }
            
            F.line = 80;
            res_12205439 = addInt(res_12205439, 1);
          }
      } while(false);
    } while(false);
    F.line = 316;
    result_11425027 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11425027;

}
function len_11430128(t_11430133) {
  var result_11430134 = 0;

  var F={procname:"len.len",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 1471;
    result_11430134 = t_11430133.counter;
  framePtr = F.prev;

  return result_11430134;

}
function has_key_11440326(t_11440331, key_11440332) {
  var result_11440333 = false;

  var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 1375;
    var hc_11440334 = [0];
    F.line = 1376;
    result_11440333 = (0 <= raw_get_11345621(t_11440331, key_11440332, hc_11440334, 0));
  framePtr = F.prev;

  return result_11440333;

}
function raw_get_11445157(t_11445161, key_11445162, hc_11445163, hc_11445163_Idx) {
            var Tmp3;

  var result_11445164 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_11445163[hc_11445163_Idx] = hash_9945214(key_11445162);
    if ((hc_11445163[hc_11445163_Idx] == 0)) {
    F.line = 65;
    hc_11445163[hc_11445163_Idx] = 314159265;
    }
    
    if (((t_11445161.data != null ? t_11445161.data.length : 0) == 0)) {
    F.line = 47;
    result_11445164 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_11455138 = (hc_11445163[hc_11445163_Idx] & (t_11445161.data != null ? (t_11445161.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9967018(t_11445161.data[chckIndx(h_11455138, 0, (t_11445161.data != null ? t_11445161.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_11445161.data[chckIndx(h_11455138, 0, (t_11445161.data != null ? t_11445161.data.length : 0)+0-1)-0].Field0 == hc_11445163[hc_11445163_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_11445161.data[chckIndx(h_11455138, 0, (t_11445161.data != null ? t_11445161.data.length : 0)+0-1)-0].Field2, key_11445162);            }          if (Tmp3) {
          F.line = 55;
          result_11445164 = h_11455138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_11455138 = next_try_9970014(h_11455138, (t_11445161.data != null ? (t_11445161.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_11445164 = subInt(-1, h_11455138);
  } while (false);
  framePtr = F.prev;

  return result_11445164;

}
function HEX5BHEX5D_11445146(t_11445152, key_11445153) {
  var result_11445155 = null;
  var result_11445155_Idx = 0;

  var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 257;
    var hcHEX60gensym9985595_11445156 = [0];
    F.line = 258;
    var indexHEX60gensym9985596_11455605 = raw_get_11445157(t_11445152, key_11445153, hcHEX60gensym9985595_11445156, 0);
    if ((0 <= indexHEX60gensym9985596_11455605)) {
    F.line = 259;
    result_11445155 = t_11445152.data[chckIndx(indexHEX60gensym9985596_11455605, 0, (t_11445152.data != null ? t_11445152.data.length : 0)+0-1)-0]; result_11445155_Idx = "Field3";
    }
    else {
      F.line = 262;
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_11445153 || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    
  framePtr = F.prev;

  return [result_11445155, result_11445155_Idx];

}
function HEX3DHEX3D_11420491(a_11420493, b_11420494) {
      var Tmp1;
        var Tmp2;
        var Tmp3;
        var Tmp4;
        var Tmp5;
        var Tmp6;
        var Tmp7;
        var Tmp8;
        var Tmp9;
        var Tmp10;
        var Tmp11;
          var Tmp12;
          var Tmp13;
          var Tmp15;
                  var Tmp18;
                  var Tmp19;
                  var Tmp20;

  var result_11420495 = false;

  var F={procname:"json.==",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((a_11420493 == null)) {
    if ((b_11420494 == null)) {
    F.line = 400;
    result_11420495 = true;
    break BeforeRet;
    }
    
    F.line = 401;
    result_11420495 = false;
    break BeforeRet;
    }
    else {
      if ((b_11420494 == null)) Tmp1 = true; else {        Tmp1 = !((a_11420493.kind == b_11420494.kind));      }    if (Tmp1) {
    F.line = 403;
    result_11420495 = false;
    break BeforeRet;
    }
    else {
      F.line = 405;
      switch (a_11420493.kind) {
      case 4:
        F.line = 407;
        var Tmp2 = a_11420493;
        if (ConstSet4[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'str\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        var Tmp3 = b_11420494;
        if (ConstSet5[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("\'str\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        result_11420495 = eqStrings(Tmp2.str, Tmp3.str);
        break;
      case 2:
        F.line = 409;
        var Tmp4 = a_11420493;
        if (ConstSet6[Tmp4.kind]===undefined) { raiseFieldError(makeNimstrLit("\'num\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        var Tmp5 = b_11420494;
        if (ConstSet7[Tmp5.kind]===undefined) { raiseFieldError(makeNimstrLit("\'num\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        result_11420495 = (Tmp4.num == Tmp5.num);
        break;
      case 3:
        F.line = 411;
        var Tmp6 = a_11420493;
        if (ConstSet8[Tmp6.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fnum\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        var Tmp7 = b_11420494;
        if (ConstSet9[Tmp7.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fnum\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        result_11420495 = (Tmp6.fnum == Tmp7.fnum);
        break;
      case 1:
        F.line = 413;
        var Tmp8 = a_11420493;
        if (ConstSet10[Tmp8.kind]===undefined) { raiseFieldError(makeNimstrLit("\'bval\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        var Tmp9 = b_11420494;
        if (ConstSet11[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("\'bval\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        result_11420495 = (Tmp8.bval == Tmp9.bval);
        break;
      case 0:
        F.line = 415;
        result_11420495 = true;
        break;
      case 6:
        F.line = 417;
        var Tmp10 = a_11420493;
        if (ConstSet12[Tmp10.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        var Tmp11 = b_11420494;
        if (ConstSet13[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        result_11420495 = HEX3DHEX3D_11425020(Tmp10.elems, Tmp11.elems);
        break;
      case 5:
          var Tmp12 = a_11420493;
          if (ConstSet14[Tmp12.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
          var Tmp13 = b_11420494;
          if (ConstSet15[Tmp13.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        if (!((len_11430128(Tmp12.fields) == len_11430128(Tmp13.fields)))) {
        F.line = 421;
        result_11420495 = false;
        break BeforeRet;
        }
        
        L14: do {
          F.line = 422;
          var key_11440214 = null;
          F.line = 422;
          var val_11440215 = null;
          F.line = 1650;
          var colontmp__12205431 = ({data: null, counter: 0, first: 0, last: 0});
          F.line = 422;
          var Tmp15 = a_11420493;
          if (ConstSet16[Tmp15.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
          nimCopy(colontmp__12205431, Tmp15.fields, NTI11251067);
          F.line = 1676;
          var l_12205433 = len_11430128(colontmp__12205431);
          if ((0 < colontmp__12205431.counter)) {
          F.line = 1255;
          var h_12205434 = colontmp__12205431.first;
          L16: do {
            F.line = 1256;
              L17: while (true) {
              if (!(0 <= h_12205434)) break L17;
                F.line = 1257;
                var nxt_12205436 = colontmp__12205431.data[chckIndx(h_12205434, 0, (colontmp__12205431.data != null ? colontmp__12205431.data.length : 0)+0-1)-0].Field1;
                if (is_filled_9967018(colontmp__12205431.data[chckIndx(h_12205434, 0, (colontmp__12205431.data != null ? colontmp__12205431.data.length : 0)+0-1)-0].Field0)) {
                F.line = 422;
                key_11440214 = colontmp__12205431.data[chckIndx(h_12205434, 0, (colontmp__12205431.data != null ? colontmp__12205431.data.length : 0)+0-1)-0].Field2;
                F.line = 1678;
                val_11440215 = colontmp__12205431.data[chckIndx(h_12205434, 0, (colontmp__12205431.data != null ? colontmp__12205431.data.length : 0)+0-1)-0].Field3;
                  var Tmp18 = b_11420494;
                  if (ConstSet17[Tmp18.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
                if (!(has_key_11440326(Tmp18.fields, key_11440214))) {
                F.line = 423;
                result_11420495 = false;
                break BeforeRet;
                }
                
                  var Tmp19 = b_11420494;
                  if (ConstSet18[Tmp19.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
                if (!(HEX3DHEX3D_11420491((Tmp20 = HEX5BHEX5D_11445146(Tmp19.fields, key_11440214), Tmp20)[0][Tmp20[1]], val_11440215))) {
                F.line = 424;
                result_11420495 = false;
                break BeforeRet;
                }
                
                if (!((len_11430128(colontmp__12205431) == l_12205433))) {
                F.line = 1679;
                failed_assert_impl_102680(makeNimstrLit("C:\\Users\\moigagoo\\.choosenim\\toolchains\\nim-1.2.6\\lib\\pure\\collections\\tables.nim(1679, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                F.line = 1260;
                h_12205434 = nxt_12205436;
              }
          } while(false);
          }
          
        } while(false);
        F.line = 425;
        result_11420495 = true;
        break;
      }
    }
    }
  } while (false);
  framePtr = F.prev;

  return result_11420495;

}
function invalid_format_string_9630046() {
  var F={procname:"strutils.invalidFormatString",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2620;
    raiseException({message: makeNimstrLit("invalid format string"), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
  framePtr = F.prev;

  
}
function nsuToLowerAsciiChar(c_8780023) {
  var result_8780024 = 0;

  var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    if ((ConstSet23[c_8780023] != undefined)) {
    F.line = 209;
    result_8780024 = chckRange(addInt(c_8780023, 32), 0, 255);
    }
    else {
      F.line = 211;
      result_8780024 = c_8780023;
    }
    
  framePtr = F.prev;

  return result_8780024;

}
function nsuCmpIgnoreStyle(a_8840022, b_8840023) {
          var Tmp7;
          var Tmp8;

  var result_8840024 = 0;

  BeforeRet: do {
    var i_8840026 = 0;
    var j_8840028 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          L3: do {
              L4: while (true) {
              if (!((i_8840026 < (a_8840022 != null ? a_8840022.length : 0)) && (a_8840022[i_8840026] == 95))) break L4;
                i_8840026 += 1;
              }
          } while(false);
          L5: do {
              L6: while (true) {
              if (!((j_8840028 < (b_8840023 != null ? b_8840023.length : 0)) && (b_8840023[j_8840028] == 95))) break L6;
                j_8840028 += 1;
              }
          } while(false);
          if ((i_8840026 < (a_8840022 != null ? a_8840022.length : 0))) {
          Tmp7 = nsuToLowerAsciiChar(a_8840022[i_8840026]);
          }
          else {
          Tmp7 = 0;
          }
          
          var aa_8840041 = Tmp7;
          if ((j_8840028 < (b_8840023 != null ? b_8840023.length : 0))) {
          Tmp8 = nsuToLowerAsciiChar(b_8840023[j_8840028]);
          }
          else {
          Tmp8 = 0;
          }
          
          var bb_8840042 = Tmp8;
          result_8840024 = (aa_8840041 - bb_8840042);
          if (!((result_8840024 == 0))) {
          break BeforeRet;
          }
          
          if (((a_8840022 != null ? a_8840022.length : 0) <= i_8840026)) {
          if (((b_8840023 != null ? b_8840023.length : 0) <= j_8840028)) {
          result_8840024 = 0;
          break BeforeRet;
          }
          
          result_8840024 = -1;
          break BeforeRet;
          }
          else {
          if (((b_8840023 != null ? b_8840023.length : 0) <= j_8840028)) {
          result_8840024 = 1;
          break BeforeRet;
          }
          }
          i_8840026 += 1;
          j_8840028 += 1;
        }
    } while(false);
  } while (false);

  return result_8840024;

}
function find_normalized_9630014(x_9630016, in_array_9630018) {
  var result_9630019 = 0;

  var F={procname:"strutils.findNormalized",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 2612;
    var i_9630021 = 0;
    L1: do {
      F.line = 2613;
        L2: while (true) {
        if (!(i_9630021 < (in_array_9630018 != null ? (in_array_9630018.length-1) : -1))) break L2;
          if ((nsuCmpIgnoreStyle(x_9630016, in_array_9630018[chckIndx(i_9630021, 0, (in_array_9630018 != null ? in_array_9630018.length : 0)+0-1)-0]) == 0)) {
          F.line = 2614;
          result_9630019 = i_9630021;
          break BeforeRet;
          }
          
          F.line = 2615;
          i_9630021 = addInt(i_9630021, 2);
        }
    } while(false);
    F.line = 2617;
    result_9630019 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_9630019;

}
function substr_341022(s_341024, first_341025, last_341026) {
  var result_341027 = null;

  var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2943;
    var first_341028 = nimMax(first_341025, 0);
    F.line = 2944;
    var l_341030 = nimMax(addInt(subInt(nimMin(last_341026, (s_341024 != null ? (s_341024.length-1) : -1)), first_341028), 1), 0);
    F.line = 2945;
    result_341027 = nimCopy(null, mnewString(chckRange(l_341030, 0, 2147483647)), NTI112);
    L1: do {
      F.line = 2946;
      var i_341039 = 0;
      F.line = 66;
      var colontmp__9731693 = 0;
      F.line = 2946;
      colontmp__9731693 = subInt(l_341030, 1);
      F.line = 77;
      var res_9731694 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_9731694 <= colontmp__9731693)) break L3;
            F.line = 2946;
            i_341039 = res_9731694;
            F.line = 2947;
            result_341027[chckIndx(i_341039, 0, (result_341027 != null ? result_341027.length : 0)+0-1)-0] = s_341024[chckIndx(addInt(i_341039, first_341028), 0, (s_341024 != null ? s_341024.length : 0)+0-1)-0];
            F.line = 80;
            res_9731694 = addInt(res_9731694, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_341027;

}
function nsuAddf(s_9635018, s_9635018_Idx, formatstr_9635019, a_9635021) {
                  var Tmp5;
            var Tmp6;
              var Tmp7;
            var Tmp10;
              var Tmp11;
                var Tmp12;
                  var Tmp15;
              var Tmp16;

  var F={procname:"strutils.addf",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2626;
    var i_9635025 = 0;
    F.line = 2627;
    var num_9635027 = 0;
    L1: do {
      F.line = 2628;
        L2: while (true) {
        if (!(i_9635025 < (formatstr_9635019 != null ? formatstr_9635019.length : 0))) break L2;
          if (((formatstr_9635019[chckIndx(i_9635025, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0] == 36) && (addInt(i_9635025, 1) < (formatstr_9635019 != null ? formatstr_9635019.length : 0)))) {
          F.line = 2630;
          switch (formatstr_9635019[chckIndx(addInt(i_9635025, 1), 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0]) {
          case 35:
            if (((a_9635021 != null ? (a_9635021.length-1) : -1) < num_9635027)) {
            F.line = 2632;
            invalid_format_string_9630046();
            }
            
            F.line = 2633;
            if (s_9635018[s_9635018_Idx] != null) { s_9635018[s_9635018_Idx] = (s_9635018[s_9635018_Idx]).concat(a_9635021[chckIndx(num_9635027, 0, (a_9635021 != null ? a_9635021.length : 0)+0-1)-0]); } else { s_9635018[s_9635018_Idx] = a_9635021[chckIndx(num_9635027, 0, (a_9635021 != null ? a_9635021.length : 0)+0-1)-0].slice(); };
            F.line = 2634;
            i_9635025 = addInt(i_9635025, 2);
            F.line = 2635;
            num_9635027 = addInt(num_9635027, 1);
            break;
          case 36:
            F.line = 2637;
            if (s_9635018[s_9635018_Idx] != null) { addChar(s_9635018[s_9635018_Idx], 36); } else { s_9635018[s_9635018_Idx] = [36]; };
            F.line = 2638;
            i_9635025 = addInt(i_9635025, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            F.line = 2640;
            var j_9640025 = 0;
            F.line = 2641;
            i_9635025 = addInt(i_9635025, 1);
            F.line = 2642;
            var negative_9640032 = (formatstr_9635019[chckIndx(i_9635025, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0] == 45);
            if (negative_9640032) {
            F.line = 2643;
            i_9635025 = addInt(i_9635025, 1);
            }
            
            L3: do {
              F.line = 2644;
                L4: while (true) {
                  if (!(i_9635025 < (formatstr_9635019 != null ? formatstr_9635019.length : 0))) Tmp5 = false; else {                    Tmp5 = (ConstSet20[formatstr_9635019[chckIndx(i_9635025, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0]] != undefined);                  }                if (!Tmp5) break L4;
                  F.line = 2645;
                  j_9640025 = subInt(addInt(mulInt(j_9640025, 10), formatstr_9635019[chckIndx(i_9635025, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0]), 48);
                  F.line = 2646;
                  i_9635025 = addInt(i_9635025, 1);
                }
            } while(false);
            F.line = 2647;
            if (!(negative_9640032)) {
            Tmp6 = subInt(j_9640025, 1);
            }
            else {
            Tmp6 = subInt((a_9635021 != null ? a_9635021.length : 0), j_9640025);
            }
            
            var idx_9645025 = Tmp6;
              if ((idx_9645025 < 0)) Tmp7 = true; else {                Tmp7 = ((a_9635021 != null ? (a_9635021.length-1) : -1) < idx_9645025);              }            if (Tmp7) {
            F.line = 2648;
            invalid_format_string_9630046();
            }
            
            F.line = 2649;
            if (s_9635018[s_9635018_Idx] != null) { s_9635018[s_9635018_Idx] = (s_9635018[s_9635018_Idx]).concat(a_9635021[chckIndx(idx_9645025, 0, (a_9635021 != null ? a_9635021.length : 0)+0-1)-0]); } else { s_9635018[s_9635018_Idx] = a_9635021[chckIndx(idx_9645025, 0, (a_9635021 != null ? a_9635021.length : 0)+0-1)-0].slice(); };
            break;
          case 123:
            F.line = 2651;
            var j_9650006 = addInt(i_9635025, 2);
            F.line = 2652;
            var k_9650008 = 0;
            F.line = 2653;
            var negative_9650009 = (formatstr_9635019[chckIndx(j_9650006, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0] == 45);
            if (negative_9650009) {
            F.line = 2654;
            j_9650006 = addInt(j_9650006, 1);
            }
            
            F.line = 2655;
            var is_number_9650017 = 0;
            L8: do {
              F.line = 2656;
                L9: while (true) {
                if (!((j_9650006 < (formatstr_9635019 != null ? formatstr_9635019.length : 0)) && !((ConstSet21[formatstr_9635019[chckIndx(j_9650006, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0]] != undefined)))) break L9;
                  if ((ConstSet22[formatstr_9635019[chckIndx(j_9650006, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0]] != undefined)) {
                  F.line = 2658;
                  k_9650008 = subInt(addInt(mulInt(k_9650008, 10), formatstr_9635019[chckIndx(j_9650006, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0]), 48);
                  if ((is_number_9650017 == 0)) {
                  F.line = 2659;
                  is_number_9650017 = 1;
                  }
                  
                  }
                  else {
                    F.line = 2661;
                    is_number_9650017 = -1;
                  }
                  
                  F.line = 2662;
                  j_9650006 = addInt(j_9650006, 1);
                }
            } while(false);
            if ((is_number_9650017 == 1)) {
            F.line = 2664;
            if (!(negative_9650009)) {
            Tmp10 = subInt(k_9650008, 1);
            }
            else {
            Tmp10 = subInt((a_9635021 != null ? a_9635021.length : 0), k_9650008);
            }
            
            var idx_9660025 = Tmp10;
              if ((idx_9660025 < 0)) Tmp11 = true; else {                Tmp11 = ((a_9635021 != null ? (a_9635021.length-1) : -1) < idx_9660025);              }            if (Tmp11) {
            F.line = 2665;
            invalid_format_string_9630046();
            }
            
            F.line = 2666;
            if (s_9635018[s_9635018_Idx] != null) { s_9635018[s_9635018_Idx] = (s_9635018[s_9635018_Idx]).concat(a_9635021[chckIndx(idx_9660025, 0, (a_9635021 != null ? a_9635021.length : 0)+0-1)-0]); } else { s_9635018[s_9635018_Idx] = a_9635021[chckIndx(idx_9660025, 0, (a_9635021 != null ? a_9635021.length : 0)+0-1)-0].slice(); };
            }
            else {
              F.line = 2668;
              var x_9665006 = find_normalized_9630014(substr_341022(formatstr_9635019, addInt(i_9635025, 2), subInt(j_9650006, 1)), a_9635021);
                if (!(0 <= x_9665006)) Tmp12 = false; else {                  Tmp12 = (x_9665006 < (a_9635021 != null ? (a_9635021.length-1) : -1));                }              if (Tmp12) {
              F.line = 2669;
              if (s_9635018[s_9635018_Idx] != null) { s_9635018[s_9635018_Idx] = (s_9635018[s_9635018_Idx]).concat(a_9635021[chckIndx(addInt(x_9665006, 1), 0, (a_9635021 != null ? a_9635021.length : 0)+0-1)-0]); } else { s_9635018[s_9635018_Idx] = a_9635021[chckIndx(addInt(x_9665006, 1), 0, (a_9635021 != null ? a_9635021.length : 0)+0-1)-0].slice(); };
              }
              else {
                F.line = 2670;
              invalid_format_string_9630046();
              }
              
            }
            
            F.line = 2671;
            i_9635025 = addInt(j_9650006, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            F.line = 2673;
            var j_9670006 = addInt(i_9635025, 1);
            L13: do {
              F.line = 2674;
                L14: while (true) {
                  if (!(j_9670006 < (formatstr_9635019 != null ? formatstr_9635019.length : 0))) Tmp15 = false; else {                    Tmp15 = (ConstSet24[formatstr_9635019[chckIndx(j_9670006, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0]] != undefined);                  }                if (!Tmp15) break L14;
                  F.line = 2674;
                  j_9670006 = addInt(j_9670006, 1);
                }
            } while(false);
            F.line = 2675;
            var x_9675013 = find_normalized_9630014(substr_341022(formatstr_9635019, addInt(i_9635025, 1), subInt(j_9670006, 1)), a_9635021);
              if (!(0 <= x_9675013)) Tmp16 = false; else {                Tmp16 = (x_9675013 < (a_9635021 != null ? (a_9635021.length-1) : -1));              }            if (Tmp16) {
            F.line = 2676;
            if (s_9635018[s_9635018_Idx] != null) { s_9635018[s_9635018_Idx] = (s_9635018[s_9635018_Idx]).concat(a_9635021[chckIndx(addInt(x_9675013, 1), 0, (a_9635021 != null ? a_9635021.length : 0)+0-1)-0]); } else { s_9635018[s_9635018_Idx] = a_9635021[chckIndx(addInt(x_9675013, 1), 0, (a_9635021 != null ? a_9635021.length : 0)+0-1)-0].slice(); };
            }
            else {
              F.line = 2677;
            invalid_format_string_9630046();
            }
            
            F.line = 2678;
            i_9635025 = j_9670006;
            break;
          default: 
            F.line = 2680;
            invalid_format_string_9630046();
            break;
          }
          }
          else {
            F.line = 2682;
            if (s_9635018[s_9635018_Idx] != null) { addChar(s_9635018[s_9635018_Idx], formatstr_9635019[chckIndx(i_9635025, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0]); } else { s_9635018[s_9635018_Idx] = [formatstr_9635019[chckIndx(i_9635025, 0, (formatstr_9635019 != null ? formatstr_9635019.length : 0)+0-1)-0]]; };
            F.line = 2683;
            i_9635025 = addInt(i_9635025, 1);
          }
          
        }
    } while(false);
  framePtr = F.prev;

  
}
function nsuFormatOpenArray(formatstr_9680027, a_9680029) {
  var result_9680030 = [null];

  var F={procname:"strutils.%",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2730;
    result_9680030[0] = nimCopy(null, mnewString(0), NTI112);
    F.line = 2731;
    nsuAddf(result_9680030, 0, formatstr_9680027, a_9680029);
  framePtr = F.prev;

  return result_9680030[0];

}
function is_undefined_315483(x_315486) {
  var result_315487 = false;

  var F={procname:"isUndefined.isUndefined",prev:framePtr,filename:"reprjs.nim",line:0};
  framePtr = F;
    F.line = 34;
    result_315487 = x_315486 === undefined;
  framePtr = F.prev;

  return result_315487;

}
function add_quoted_11780201(s_11780204, s_11780204_Idx, x_11780205) {
  var F={procname:"addQuoted.addQuoted",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2807;
    if (s_11780204[s_11780204_Idx] != null) { s_11780204[s_11780204_Idx] = (s_11780204[s_11780204_Idx]).concat(reprEnum(x_11780205, NTI11251041)); } else { s_11780204[s_11780204_Idx] = reprEnum(x_11780205, NTI11251041).slice(); };
  framePtr = F.prev;

  
}
function collection_to_string_11780015(x_11780018, prefix_11780019, separator_11780020, suffix_11780021) {
  var result_11780022 = [null];

  var F={procname:"collectionToString.collectionToString",prev:framePtr,filename:"dollars.nim",line:0};
  framePtr = F;
    F.line = 106;
    result_11780022[0] = nimCopy(null, prefix_11780019, NTI112);
    F.line = 107;
    var first_element_11780023 = true;
    L1: do {
      F.line = 108;
      var value_11780069 = 0;
      F.line = 37;
      var i_12205461 = 0;
      L2: do {
        F.line = 38;
          L3: while (true) {
          if (!(i_12205461 <= 6)) break L3;
            if ((x_11780018[i_12205461] != undefined)) {
            F.line = 108;
            value_11780069 = i_12205461;
            if (first_element_11780023) {
            F.line = 110;
            first_element_11780023 = false;
            }
            else {
              F.line = 112;
            if (result_11780022[0] != null) { result_11780022[0] = (result_11780022[0]).concat(separator_11780020); } else { result_11780022[0] = separator_11780020.slice(); };
            }
            
            F.line = 121;
            add_quoted_11780201(result_11780022, 0, value_11780069);
            }
            
            F.line = 40;
            i_12205461 += 1;
          }
      } while(false);
    } while(false);
    F.line = 122;
    if (result_11780022[0] != null) { result_11780022[0] = (result_11780022[0]).concat(suffix_11780021); } else { result_11780022[0] = suffix_11780021.slice(); };
  framePtr = F.prev;

  return result_11780022[0];

}
function HEX24_11780009(x_11780013) {
  var result_11780014 = null;

  var F={procname:"$.$",prev:framePtr,filename:"dollars.nim",line:0};
  framePtr = F;
    F.line = 125;
    result_11780014 = nimCopy(null, collection_to_string_11780015(x_11780013, makeNimstrLit("{"), makeNimstrLit(", "), makeNimstrLit("}")), NTI112);
  framePtr = F.prev;

  return result_11780014;

}
function new_12140008() {
  var result_12140012 = null;

  var F={procname:"new.new",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 850;
    var r_12140202 = null;
    F.line = 851;
    r_12140202 = ({m_type: NTI12119016, title: null, unitPrice: 0.0, id: 0});
    F.line = 852;
    result_12140012 = r_12140202;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_12140012;

}
function init_from_json_12150201(dst_12150205, dst_12150205_Idx, json_node_12150206, json_path_12150207, json_path_12150207_Idx) {
    var Tmp1;

  var F={procname:"initFromJson.initFromJson",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (HEX3DHEX3D_11420491(json_node_12150206, null)) {
    F.line = 946;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(json_path_12150207[json_path_12150207_Idx] || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    else {
    if (!((ConstSet26[json_node_12150206.kind] != undefined))) {
    F.line = 948;
    var msgHEX60gensym12150209_12165019 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_11780009(ConstSet27), nimCopy(null, json_path_12150207[json_path_12150207_Idx], NTI112), reprEnum(json_node_12150206.kind, NTI11251041)]);
    F.line = 953;
    raiseException({message: nimCopy(null, msgHEX60gensym12150209_12165019, NTI112), parent: null, m_type: NTI11066039, name: null, trace: null, up: null}, "JsonKindError");
    }
    }
    F.line = 1005;
    var Tmp1 = json_node_12150206;
    if (ConstSet28[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'num\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    dst_12150205[dst_12150205_Idx] = chckRange(Tmp1.num, -2147483648, 2147483647);
  framePtr = F.prev;

  
}
function get_or_default_11550192(t_11550197, key_11550198) {
  var result_11550199 = null;

  var F={procname:"getOrDefault.getOrDefault",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 181;
    var hcHEX60gensym11550200_11555001 = [0];
    F.line = 182;
    var indexHEX60gensym11550201_11555010 = raw_get_11445157(t_11550197, key_11550198, hcHEX60gensym11550200_11555001, 0);
    if ((0 <= indexHEX60gensym11550201_11555010)) {
    F.line = 183;
    result_11550199 = t_11550197.data[chckIndx(indexHEX60gensym11550201_11555010, 0, (t_11550197.data != null ? t_11550197.data.length : 0)+0-1)-0].Field3;
    }
    
  framePtr = F.prev;

  return result_11550199;

}
function get_or_default_11570016(node_11570018, key_11570019) {
      var Tmp1;
    var Tmp2;

  var result_11570020 = null;

  var F={procname:"json.getOrDefault",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
      if (!!((node_11570018 == null))) Tmp1 = false; else {        Tmp1 = (node_11570018.kind == 5);      }    if (Tmp1) {
    F.line = 524;
    var Tmp2 = node_11570018;
    if (ConstSet29[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    result_11570020 = get_or_default_11550192(Tmp2.fields, key_11570019);
    }
    
  framePtr = F.prev;

  return result_11570020;

}
function init_from_json_11765865(dst_11765868, dst_11765868_Idx, json_node_11765869, json_path_11765871, json_path_11765871_Idx) {
      var Tmp1;

  var F={procname:"json.initFromJson",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (HEX3DHEX3D_11420491(json_node_11765869, null)) {
    F.line = 946;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(json_path_11765871[json_path_11765871_Idx] || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    else {
    if (!((ConstSet30[json_node_11765869.kind] != undefined))) {
    F.line = 948;
    var msgHEX60gensym11766012_11780465 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_11780009(ConstSet31), nimCopy(null, json_path_11765871[json_path_11765871_Idx], NTI112), reprEnum(json_node_11765869.kind, NTI11251041)]);
    F.line = 953;
    raiseException({message: nimCopy(null, msgHEX60gensym11766012_11780465, NTI112), parent: null, m_type: NTI11066039, name: null, trace: null, up: null}, "JsonKindError");
    }
    }
    if ((json_node_11765869.kind == 0)) {
    F.line = 992;
    dst_11765868[dst_11765868_Idx] = nimCopy(null, [], NTI112);
    }
    else {
      F.line = 994;
      var Tmp1 = json_node_11765869;
      if (ConstSet32[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'str\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      dst_11765868[dst_11765868_Idx] = nimCopy(null, Tmp1.str, NTI112);
    }
    
  framePtr = F.prev;

  
}
function init_from_json_12180201(dst_12180205, dst_12180205_Idx, json_node_12180206, json_path_12180207, json_path_12180207_Idx) {
    var Tmp1;
      var Tmp2;

  var F={procname:"initFromJson.initFromJson",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (HEX3DHEX3D_11420491(json_node_12180206, null)) {
    F.line = 946;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(json_path_12180207[json_path_12180207_Idx] || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    else {
    if (!((ConstSet33[json_node_12180206.kind] != undefined))) {
    F.line = 948;
    var msgHEX60gensym12180209_12195019 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_11780009(ConstSet34), nimCopy(null, json_path_12180207[json_path_12180207_Idx], NTI112), reprEnum(json_node_12180206.kind, NTI11251041)]);
    F.line = 953;
    raiseException({message: nimCopy(null, msgHEX60gensym12180209_12195019, NTI112), parent: null, m_type: NTI11066039, name: null, trace: null, up: null}, "JsonKindError");
    }
    }
    if ((json_node_12180206.kind == 3)) {
    F.line = 1010;
    var Tmp1 = json_node_12180206;
    if (ConstSet35[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fnum\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    dst_12180205[dst_12180205_Idx] = Tmp1.fnum;
    }
    else {
      F.line = 1012;
      var Tmp2 = json_node_12180206;
      if (ConstSet36[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'num\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      dst_12180205[dst_12180205_Idx] = Tmp2.num;
    }
    
  framePtr = F.prev;

  
}
function init_from_json_12140222(dst_12140226, json_node_12140227, json_path_12140228, json_path_12140228_Idx) {
  var F={procname:"initFromJson.initFromJson",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 1182;
    var original_json_path_len_12140231 = (json_path_12140228[json_path_12140228_Idx] != null ? json_path_12140228[json_path_12140228_Idx].length : 0);
    F.line = 1114;
    if (json_path_12140228[json_path_12140228_Idx] != null) { json_path_12140228[json_path_12140228_Idx] = (json_path_12140228[json_path_12140228_Idx]).concat(makeNimstrLit(".id")); } else { json_path_12140228[json_path_12140228_Idx] = makeNimstrLit(".id"); };
    F.line = 1124;
    init_from_json_12150201(dst_12140226, "id", get_or_default_11570016(json_node_12140227, makeNimstrLit("id")), json_path_12140228, json_path_12140228_Idx);
    F.line = 1125;
    (json_path_12140228[json_path_12140228_Idx] == null ? json_path_12140228[json_path_12140228_Idx] = mnewString(chckRange(original_json_path_len_12140231, 0, 2147483647)) : json_path_12140228[json_path_12140228_Idx].length = chckRange(original_json_path_len_12140231, 0, 2147483647));
    F.line = 1114;
    if (json_path_12140228[json_path_12140228_Idx] != null) { json_path_12140228[json_path_12140228_Idx] = (json_path_12140228[json_path_12140228_Idx]).concat(makeNimstrLit(".title")); } else { json_path_12140228[json_path_12140228_Idx] = makeNimstrLit(".title"); };
    F.line = 1124;
    init_from_json_11765865(dst_12140226, "title", get_or_default_11570016(json_node_12140227, makeNimstrLit("title")), json_path_12140228, json_path_12140228_Idx);
    F.line = 1125;
    (json_path_12140228[json_path_12140228_Idx] == null ? json_path_12140228[json_path_12140228_Idx] = mnewString(chckRange(original_json_path_len_12140231, 0, 2147483647)) : json_path_12140228[json_path_12140228_Idx].length = chckRange(original_json_path_len_12140231, 0, 2147483647));
    F.line = 1114;
    if (json_path_12140228[json_path_12140228_Idx] != null) { json_path_12140228[json_path_12140228_Idx] = (json_path_12140228[json_path_12140228_Idx]).concat(makeNimstrLit(".unitPrice")); } else { json_path_12140228[json_path_12140228_Idx] = makeNimstrLit(".unitPrice"); };
    F.line = 1124;
    init_from_json_12180201(dst_12140226, "unitPrice", get_or_default_11570016(json_node_12140227, makeNimstrLit("unitPrice")), json_path_12140228, json_path_12140228_Idx);
    F.line = 1125;
    (json_path_12140228[json_path_12140228_Idx] == null ? json_path_12140228[json_path_12140228_Idx] = mnewString(chckRange(original_json_path_len_12140231, 0, 2147483647)) : json_path_12140228[json_path_12140228_Idx].length = chckRange(original_json_path_len_12140231, 0, 2147483647));
  framePtr = F.prev;

  
}
function init_from_json_12120078(dst_12120083, dst_12120083_Idx, json_node_12120084, json_path_12120085, json_path_12120085_Idx) {
  var F={procname:"initFromJson.initFromJson",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (HEX3DHEX3D_11420491(json_node_12120084, null)) {
    F.line = 946;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(json_path_12120085[json_path_12120085_Idx] || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    else {
    if (!((ConstSet19[json_node_12120084.kind] != undefined))) {
    F.line = 948;
    var msgHEX60gensym12120087_12135019 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_11780009(ConstSet25), nimCopy(null, json_path_12120085[json_path_12120085_Idx], NTI112), reprEnum(json_node_12120084.kind, NTI11251041)]);
    F.line = 953;
    raiseException({message: nimCopy(null, msgHEX60gensym12120087_12135019, NTI112), parent: null, m_type: NTI11066039, name: null, trace: null, up: null}, "JsonKindError");
    }
    }
    if ((json_node_12120084.kind == 0)) {
    F.line = 1062;
    dst_12120083[dst_12120083_Idx] = null;
    }
    else {
      F.line = 1064;
      dst_12120083[dst_12120083_Idx] = new_12140008();
      F.line = 1065;
      init_from_json_12140222(dst_12120083[dst_12120083_Idx], json_node_12120084, json_path_12120085, json_path_12120085_Idx);
    }
    
  framePtr = F.prev;

  
}
function to_12120070(node_12120074) {
  var result_12120076 = [null];

  var F={procname:"to.to",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 1230;
    var json_path_12120077 = [[]];
    F.line = 1231;
    init_from_json_12120078(result_12120076, 0, node_12120074, json_path_12120077, 0);
  framePtr = F.prev;

  return result_12120076[0];

}
function cb_12120063(http_stat_12120065, resp_12120066) {
  var F={procname:"index.cb",prev:framePtr,filename:"index.nim",line:0};
  framePtr = F;
    F.line = 24;
    var j_12120067 = parse_json_11765257(cstrToNimstr(resp_12120066));
    F.line = 25;
    var i_12200243 = to_12120070(j_12120067);
    F.line = 27;
    s_12120049[0] = toJSStr(i_12200243.title);
  framePtr = F.prev;

  
}
function main_12200257() {
    function render_12200260() {
        function HEX3Aanonymous_12205020(ev_12205022, n_12205023) {
          var F={procname:"render.:anonymous",prev:framePtr,filename:"index.nim",line:0};
          framePtr = F;
            F.line = 45;
            ajax_get_11990219("/api/items/5", [], cb_12120063, true, kxi_10187284[0]);
          framePtr = F.prev;

          
        }

      var result_12200262 = null;

      var F={procname:"main.render",prev:framePtr,filename:"index.nim",line:0};
      framePtr = F;
        F.line = 33;
        F.line = 33;
        var tmp_12200263 = tree_9830445(43, []);
        F.line = 34;
        var tmp_12200264 = tree_9830445(21, []);
        F.line = 34;
        add_9820072(tmp_12200264, text_9830548(makeNimstrLit("Hello Karax")));
        F.line = 34;
        add_9820072(tmp_12200263, tmp_12200264);
        F.line = 36;
        add_9820072(tmp_12200263, render_12096047(state_12200259.tweetBox));
        F.line = 37;
        add_9820072(tmp_12200263, render_12096047(state_12200259.anotherTweetBox));
        F.line = 39;
        var tmp_12200265 = tree_9830445(31, []);
        F.line = 40;
        add_9820072(tmp_12200265, text_9830601(s_12120049[0]));
        F.line = 40;
        add_9820072(tmp_12200263, tmp_12200265);
        F.line = 42;
        var tmp_12200266 = tree_9830445(106, []);
        F.line = 43;
        add_9820072(tmp_12200266, text_9830548(makeNimstrLit("AJAX")));
        F.line = 44;
        add_event_handler_10750118(tmp_12200266, 0, HEX3Aanonymous_12205020, kxi_10187284[0]);
        F.line = 44;
        add_9820072(tmp_12200263, tmp_12200266);
        result_12200262 = tmp_12200263;
      framePtr = F.prev;

      return result_12200262;

    }

  var F={procname:"index.main",prev:framePtr,filename:"index.nim",line:0};
  framePtr = F;
    F.line = 30;
    var state_12200259 = init_state_12120018();
    set_renderer_10745238(render_12200260, "ROOT", null);
  framePtr = F.prev;

  
}
main_12200257();
